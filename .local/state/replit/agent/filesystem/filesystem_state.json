{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Portfolio Application\n\n## Overview\n\nThis is a modern full-stack personal portfolio application built with React, Express, and TypeScript. The application features a sleek, interactive design with animated elements, 3D visual effects, and a comprehensive contact form system. It showcases a developer's skills, projects, and provides a way for visitors to get in touch through a contact form that stores submissions in a database.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nPortfolio requirements: More features and functionality, enhanced parallax scrolling, improved animations.\n\n## Recent Changes (August 2025)\n\n### Portfolio Enhancement Updates\n- ✅ Fixed text visibility issues for \"Hamd\" name and \"Get In Touch\" sections\n- ✅ Removed problematic hanging animations that were causing display issues\n- ✅ Added comprehensive Skills showcase with 6 technical categories\n- ✅ Enhanced parallax scrolling throughout all sections\n- ✅ Added floating background elements for visual appeal\n- ✅ Implemented scroll progress indicator\n- ✅ Enhanced text contrast and visibility across all themes\n- ✅ Added contact form with SendGrid email integration to aliyaanmohd42@gmail.com\n- ✅ Created authentication system with sign in/sign up modal forms\n- ✅ Simplified portfolio to 6 core sections (Home, About, Skills, Projects, Social, Contact)\n- ✅ Removed \"View Details\" functionality from project cards per user request\n- ✅ Applied gradient text styling to \"Get In Touch\" section title\n- ✅ Added WebGL-optimized Three.js 3D scene with lazy loading and performance detection\n- ✅ Enhanced image lazy loading with fallback handling and progressive loading\n- ✅ Integrated social media section with Instagram, GitHub, LinkedIn, and Twitter/X links\n- ✅ Added Full E-commerce Website project with payment integration\n- ✅ Added 40+ Tools PDF Website project with payment system\n- ✅ Added PHP programming language to portfolio skills and technical sections\n- ✅ Added Restaurant Website project with reservations and payment processing\n- ✅ Added AI Chatbot project with OpenAI integration and natural language processing\n- ✅ Updated experience from 5 to 6 years across portfolio sections\n- ✅ Applied colorful gradient styling to \"Hamd\" name in navigation bar\n- ✅ Updated all social media links with real URLs (GitHub, LinkedIn, Twitter, Instagram)\n- ✅ Removed hover effects from all social media icons and contact section elements\n- ✅ Added black background to all social media icons in both sections\n- ✅ Removed 3D Scene Preview component (gray rectangular element) from Projects section\n- ✅ Removed all backend functionality (Express server, database, API endpoints)\n- ✅ Converted Contact form to frontend-only implementation with console logging\n- ✅ Removed React Query dependencies and backend imports\n- ✅ Updated project to run purely on Vite frontend development server\n\n### Current Portfolio Structure\nThe portfolio now contains 6 main sections:\n1. Hero - Main landing section with name and introduction\n2. About - Personal information and background\n3. Skills - Technical skills categorized by specialty\n4. Projects - Showcase of work and projects with WebGL 3D preview\n5. Social Media - Social media platform links with animated icons\n6. Contact - Contact form with email integration and gradient styling\n\n### New Components Added\n- ScrollProgress.tsx - Enhanced scroll progress indicator\n- FloatingElements.tsx - Animated background elements\n- SocialMedia.tsx - Social media links section with animated icons\n- Scene3D.tsx - WebGL-optimized Three.js 3D scene component\n- Contact form with SendGrid email integration and gradient text styling\n- hooks/use-parallax.ts - Reusable parallax scrolling hook\n- hooks/use-lazy-load.ts - Lazy loading optimization hooks with WebGL performance detection\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Styling**: Tailwind CSS with custom CSS variables for consistent theming\n- **UI Components**: Radix UI primitives with shadcn/ui component library for accessible, customizable components\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack React Query for server state management and API interactions\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n- **Animations**: CSS-based animations with custom keyframes, simulated 3D effects using CSS transforms\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules for modern JavaScript features\n- **Database Layer**: Drizzle ORM with PostgreSQL for type-safe database operations\n- **Storage Pattern**: Abstract storage interface with in-memory implementation for development\n- **Session Management**: Express sessions with PostgreSQL session store\n- **API Design**: RESTful endpoints with structured error handling and request logging\n\n### Development Tools\n- **Build System**: Vite for fast development and optimized production builds\n- **Code Quality**: TypeScript strict mode with comprehensive type checking\n- **Development Server**: Express with Vite middleware integration for seamless full-stack development\n- **Hot Reload**: Vite HMR for instant feedback during development\n\n### Database Schema\n- **Users Table**: Basic user management with username/password authentication\n- **Contacts Table**: Contact form submissions with name, email, subject, message, optional phone, and timestamp\n- **Schema Validation**: Drizzle-zod integration for runtime type validation\n\n### UI/UX Design Patterns\n- **Responsive Design**: Mobile-first approach with breakpoint-based layouts\n- **Dark/Light Theme**: CSS variable-based theming with localStorage persistence\n- **Loading States**: Animated loading screen with progress indicators\n- **Interactive Elements**: Hover effects, smooth scrolling, and animated transitions\n- **Accessibility**: ARIA labels, keyboard navigation, and screen reader support\n\n## External Dependencies\n\n### Core Technologies\n- **@neondatabase/serverless**: Serverless PostgreSQL database connection\n- **drizzle-orm**: Type-safe ORM for database operations\n- **drizzle-kit**: Database schema migration and management tools\n\n### UI Framework\n- **@radix-ui/***: Comprehensive set of accessible UI primitives\n- **@tanstack/react-query**: Server state management and caching\n- **tailwindcss**: Utility-first CSS framework\n- **class-variance-authority**: Type-safe variant management for components\n\n### Form Handling\n- **react-hook-form**: Performant form library with minimal re-renders\n- **@hookform/resolvers**: Integration between React Hook Form and validation libraries\n- **zod**: TypeScript-first schema validation\n\n### Development Infrastructure\n- **vite**: Next-generation frontend build tool\n- **tsx**: TypeScript execution environment for Node.js\n- **esbuild**: Fast JavaScript bundler for production builds\n\n### Styling and Assets\n- **clsx**: Utility for constructing className strings conditionally\n- **tailwind-merge**: Utility for merging Tailwind CSS classes\n- **lucide-react**: Beautiful, customizable SVG icons\n- **embla-carousel-react**: Smooth carousel component\n\n### Session and Security\n- **express-session**: Session middleware for Express\n- **connect-pg-simple**: PostgreSQL session store for persistent sessions\n\n### Utilities\n- **date-fns**: Modern JavaScript date utility library\n- **nanoid**: URL-safe unique string ID generator","size_bytes":7555},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        success: \"var(--success)\",\n        \"dark-bg\": \"var(--dark-bg)\",\n        \"dark-card\": \"var(--dark-card)\",\n        \"light-text\": \"var(--light-text)\",\n        \"dark-text\": \"var(--dark-text)\",\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        display: [\"var(--font-display)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-20px)\" },\n        },\n        glow: {\n          from: { textShadow: \"0 0 20px hsl(var(--primary))\" },\n          to: { textShadow: \"0 0 30px hsl(var(--secondary)), 0 0 40px hsl(var(--secondary))\" },\n        },\n        slideUp: {\n          from: { transform: \"translateY(100px)\", opacity: \"0\" },\n          to: { transform: \"translateY(0)\", opacity: \"1\" },\n        },\n        fadeIn: {\n          from: { opacity: \"0\" },\n          to: { opacity: \"1\" },\n        },\n        scaleIn: {\n          from: { transform: \"scale(0.8)\", opacity: \"0\" },\n          to: { transform: \"scale(1)\", opacity: \"1\" },\n        },\n        particle: {\n          \"0%\": { transform: \"translateY(100vh) translateX(-50px)\" },\n          \"100%\": { transform: \"translateY(-100px) translateX(50px)\" },\n        },\n        \"gradient-shift\": {\n          \"0%, 100%\": { backgroundPosition: \"0% 50%\" },\n          \"50%\": { backgroundPosition: \"100% 50%\" },\n        },\n        \"float-slow\": {\n          \"0%, 100%\": { transform: \"translateY(0px) rotate(0deg)\" },\n          \"50%\": { transform: \"translateY(-30px) rotate(5deg)\" },\n        },\n        \"pulse-glow\": {\n          \"0%, 100%\": { \n            boxShadow: \"0 0 20px hsl(var(--primary)/0.3)\" \n          },\n          \"50%\": { \n            boxShadow: \"0 0 40px hsl(var(--primary)/0.6), 0 0 60px hsl(var(--secondary)/0.3)\" \n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        float: \"float 6s ease-in-out infinite\",\n        glow: \"glow 2s ease-in-out infinite alternate\",\n        \"slide-up\": \"slideUp 0.8s ease-out\",\n        \"fade-in\": \"fadeIn 1s ease-out\",\n        \"scale-in\": \"scaleIn 0.5s ease-out\",\n        particle: \"particle 20s linear infinite\",\n        \"gradient-shift\": \"gradient-shift 8s ease infinite\",\n        \"float-slow\": \"float-slow 8s ease-in-out infinite\",\n        \"pulse-glow\": \"pulse-glow 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4941},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/email.ts":{"content":"import sgMail from '@sendgrid/mail';\n\nconst SENDGRID_ENABLED = !!process.env.SENDGRID_API_KEY;\n\nif (SENDGRID_ENABLED) {\n  sgMail.setApiKey(process.env.SENDGRID_API_KEY!);\n  console.log('SendGrid email service enabled');\n} else {\n  console.warn('SENDGRID_API_KEY not found - email functionality will be disabled');\n}\n\ninterface ContactFormData {\n  name: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n\nexport async function sendContactEmail(formData: ContactFormData): Promise<boolean> {\n  if (!SENDGRID_ENABLED) {\n    console.log('Email sending skipped - SendGrid not configured');\n    return false;\n  }\n\n  try {\n    const emailContent = {\n      to: 'aliyaanmohd42@gmail.com',\n      from: 'aliyaanmohd42@gmail.com', // Use your verified email as sender\n      subject: `Portfolio Contact: ${formData.subject}`,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h2 style=\"color: #333; border-bottom: 2px solid #8b45c7; padding-bottom: 10px;\">\n            New Contact Form Submission\n          </h2>\n          \n          <div style=\"margin: 20px 0;\">\n            <h3 style=\"color: #8b45c7;\">Contact Details:</h3>\n            <p><strong>Name:</strong> ${formData.name}</p>\n            <p><strong>Email:</strong> ${formData.email}</p>\n            <p><strong>Subject:</strong> ${formData.subject}</p>\n          </div>\n          \n          <div style=\"margin: 20px 0;\">\n            <h3 style=\"color: #8b45c7;\">Message:</h3>\n            <div style=\"background: #f5f5f5; padding: 15px; border-radius: 5px; border-left: 4px solid #8b45c7;\">\n              ${formData.message.replace(/\\n/g, '<br>')}\n            </div>\n          </div>\n          \n          <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; color: #666; font-size: 12px;\">\n            <p>This email was sent from your portfolio contact form.</p>\n            <p>Sent at: ${new Date().toLocaleString()}</p>\n          </div>\n        </div>\n      `,\n      text: `\n        New Contact Form Submission\n        \n        Name: ${formData.name}\n        Email: ${formData.email}\n        Subject: ${formData.subject}\n        \n        Message:\n        ${formData.message}\n        \n        Sent at: ${new Date().toLocaleString()}\n      `\n    };\n\n    await sgMail.send(emailContent);\n    console.log('Contact email sent successfully');\n    return true;\n  } catch (error) {\n    console.error('SendGrid email error:', error);\n    return false;\n  }\n}","size_bytes":2495},"server/env.ts":{"content":"// Environment variables for Vite frontend\nexport const viteEnvVars = {\n  VITE_CLERK_PUBLISHABLE_KEY: process.env.CLERK_PUBLISHABLE_KEY\n};","size_bytes":138},"server/index.ts":{"content":"import { exec } from \"child_process\";\n\nconsole.log(\"Starting frontend-only portfolio...\");\n\nconst viteProcess = exec(\"npx vite --config vite.replit.config.ts\", (error, stdout, stderr) => {\n  if (error) {\n    console.error(`Error: ${error.message}`);\n    return;\n  }\n  if (stderr) {\n    console.error(`Stderr: ${stderr}`);\n    return;\n  }\n  console.log(`Stdout: ${stdout}`);\n});\n\nviteProcess.stdout?.on(\"data\", (data) => {\n  console.log(data.toString());\n});\n\nviteProcess.stderr?.on(\"data\", (data) => {\n  console.error(data.toString());\n});\n\n// Keep the process alive\nprocess.on('SIGINT', () => {\n  viteProcess.kill();\n  process.exit();\n});","size_bytes":639},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { sendContactEmail } from \"./email\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const contactData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(contactData);\n      \n      // Send email notification\n      const emailSent = await sendContactEmail({\n        name: contact.name,\n        email: contact.email,\n        subject: contact.subject,\n        message: contact.message\n      });\n\n      if (!emailSent) {\n        console.warn(\"Email failed to send, but contact was saved to database\");\n      }\n      \n      res.json({ \n        success: true, \n        message: emailSent \n          ? \"Message sent successfully! You'll receive a response soon.\"\n          : \"Message received! There was an issue with email delivery, but your message has been saved.\",\n        contact: {\n          id: contact.id,\n          name: contact.name,\n          email: contact.email,\n          subject: contact.subject\n        },\n        emailSent\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({\n          success: false,\n          message: \"Invalid form data\",\n          errors: error.errors\n        });\n      } else {\n        console.error(\"Contact form error:\", error);\n        res.status(500).json({\n          success: false,\n          message: \"Failed to send message. Please try again.\"\n        });\n      }\n    }\n  });\n\n  // Get all contacts (for admin purposes)\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getContacts();\n      res.json({ success: true, contacts });\n    } catch (error) {\n      console.error(\"Get contacts error:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to retrieve contacts\"\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2202},"server/storage.ts":{"content":"import { type Contact, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  createContact(contact: InsertContact): Promise<Contact>;\n  getContacts(): Promise<Contact[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private contacts: Map<string, Contact>;\n\n  constructor() {\n    this.contacts = new Map();\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact, \n      id,\n      createdAt: new Date()\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values()).sort(\n      (a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0)\n    );\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":868},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/contexts/ThemeProvider\";\nimport Home from \"@/pages/home\";\nimport NotFound from \"@/pages/not-found\";\nimport { useEffect, useState } from \"react\";\nimport LoadingScreen from \"@/components/LoadingScreen\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Quick loading - no artificial delay\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <ThemeProvider>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1012},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&family=Montserrat:wght@100;200;300;400;500;600;700;800;900&family=Space+Grotesk:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700;800;900&family=JetBrains+Mono:wght@100;200;300;400;500;600;700;800&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(210 25% 7.8431%);\n  --card: hsl(180 6.6667% 97.0588%);\n  --card-foreground: hsl(210 25% 7.8431%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(210 25% 7.8431%);\n  --primary: hsl(263.4 70% 50.4%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(270.9 95.2% 75.3%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(240 1.9608% 90%);\n  --muted-foreground: hsl(210 25% 7.8431%);\n  --accent: hsl(186.2 91.4% 42.4%);\n  --accent-foreground: hsl(0 0% 100%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(201.4286 30.4348% 90.9804%);\n  --input: hsl(200 23.0769% 97.4510%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --success: hsl(159.7826 100% 36.0784%);\n  --dark-bg: hsl(240 10% 3.9%);\n  --dark-card: hsl(240 10% 8.2%);\n  --light-text: hsl(210 40% 90%);\n  --dark-text: hsl(222.2 84% 4.9%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: 'Poppins', sans-serif;\n  --font-display: 'Montserrat', sans-serif;\n  --font-heading: 'Space Grotesk', sans-serif;\n  --font-serif: 'Playfair Display', serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --radius: 1.3rem;\n}\n\n.dark {\n  --background: hsl(240 10% 3.9%);\n  --foreground: hsl(210 40% 90%);\n  --card: hsl(240 10% 8.2%);\n  --card-foreground: hsl(210 40% 90%);\n  --popover: hsl(240 10% 3.9%);\n  --popover-foreground: hsl(210 40% 90%);\n  --primary: hsl(263.4 70% 50.4%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(270.9 95.2% 75.3%);\n  --secondary-foreground: hsl(222.2 84% 4.9%);\n  --muted: hsl(217.2 32.6% 17.5%);\n  --muted-foreground: hsl(215 20.2% 65.1%);\n  --accent: hsl(186.2 91.4% 42.4%);\n  --accent-foreground: hsl(0 0% 100%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(217.2 32.6% 17.5%);\n  --input: hsl(217.2 32.6% 17.5%);\n  --ring: hsl(224.3 76.3% 94.1%);\n  --chart-1: hsl(220 70% 50%);\n  --chart-2: hsl(160 60% 45%);\n  --chart-3: hsl(30 80% 55%);\n  --chart-4: hsl(280 65% 60%);\n  --chart-5: hsl(340 75% 55%);\n  --success: hsl(159.7826 100% 36.0784%);\n  --dark-bg: hsl(240 10% 3.9%);\n  --dark-card: hsl(240 10% 8.2%);\n  --light-text: hsl(210 40% 90%);\n  --dark-text: hsl(222.2 84% 4.9%);\n  --sidebar: hsl(240 10% 8.2%);\n  --sidebar-foreground: hsl(210 40% 90%);\n  --sidebar-primary: hsl(224.3 76.3% 94.1%);\n  --sidebar-primary-foreground: hsl(222.2 84% 4.9%);\n  --sidebar-accent: hsl(217.2 32.6% 17.5%);\n  --sidebar-accent-foreground: hsl(210 40% 90%);\n  --sidebar-border: hsl(217.2 32.6% 17.5%);\n  --sidebar-ring: hsl(224.3 76.3% 94.1%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  html {\n    overflow-x: hidden;\n    scroll-behavior: smooth;\n  }\n\n  body {\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n\n  /* Parallax Performance Optimizations */\n  .parallax-element {\n    will-change: transform;\n    backface-visibility: hidden;\n    perspective: 1000px;\n    transform: translateZ(0);\n  }\n\n  .parallax-smooth {\n    transition: transform 0.1s ease-out;\n  }\n\n  /* Enhanced scroll effects for parallax */\n  .scroll-effect-parallax {\n    opacity: 0;\n    transform: translateY(100px);\n    transition: all 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  }\n\n  .scroll-effect-parallax.visible {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  /* Optimized animations for better performance */\n  @media (prefers-reduced-motion: no-preference) {\n    .parallax-bg {\n      animation: float 20s ease-in-out infinite;\n    }\n\n    .parallax-ornament {\n      animation: orbit 15s linear infinite;\n    }\n  }\n\n  @keyframes float {\n    0%, 100% { transform: translateY(0px) rotate(0deg); }\n    50% { transform: translateY(-20px) rotate(180deg); }\n  }\n\n  @keyframes orbit {\n    0% { transform: rotate(0deg) translateX(50px) rotate(0deg); }\n    100% { transform: rotate(360deg) translateX(50px) rotate(-360deg); }\n  }\n\n  /* Reduce motion for accessibility */\n  @media (prefers-reduced-motion: reduce) {\n    .parallax-element {\n      transform: none !important;\n    }\n    \n    .parallax-bg,\n    .parallax-ornament {\n      animation: none !important;\n    }\n  }\n\n  /* Smooth scroll effects */\n  .scroll-effect-fade {\n    opacity: 0;\n    transform: translateY(50px);\n    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .scroll-effect-fade.visible {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  .scroll-effect-slide {\n    transform: translateX(-100px);\n    opacity: 0;\n    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .scroll-effect-slide.visible {\n    transform: translateX(0);\n    opacity: 1;\n  }\n\n  .scroll-effect-scale {\n    transform: scale(0.8);\n    opacity: 0;\n    transition: all 0.7s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .scroll-effect-scale.visible {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@layer components {\n  .font-display {\n    font-family: var(--font-display);\n  }\n  \n  .font-heading {\n    font-family: var(--font-heading);\n  }\n  \n  .font-serif {\n    font-family: var(--font-serif);\n  }\n  \n  /* Premium colorful text styles without animations */\n  .text-gradient-primary {\n    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--secondary)) 50%, hsl(var(--accent)) 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-size: 100% 100%;\n  }\n  \n  .text-gradient-hero {\n    background: linear-gradient(135deg, #8B5CF6 0%, #06B6D4 25%, #10B981 50%, #F59E0B 75%, #EF4444 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-size: 100% 100%;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.4));\n  }\n  \n  .dark .text-gradient-hero {\n    background: linear-gradient(135deg, #A78BFA 0%, #22D3EE 25%, #34D399 50%, #FBBF24 75%, #F87171 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-size: 100% 100%;\n    filter: drop-shadow(0 1px 2px rgba(255, 255, 255, 0.1));\n  }\n  \n  .text-gradient-cool {\n    background: linear-gradient(135deg, #3B82F6 0%, #8B5CF6 50%, #EC4899 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-size: 100% 100%;\n  }\n  \n  .text-gradient-warm {\n    background: linear-gradient(135deg, #F59E0B 0%, #EF4444 50%, #EC4899 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-size: 100% 100%;\n  }\n  \n  .text-gradient-nature {\n    background: linear-gradient(135deg, #10B981 0%, #059669 50%, #047857 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-size: 100% 100%;\n  }\n\n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n\n  .text-shadow-lg {\n    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n\n  .parallax-element {\n    will-change: transform;\n  }\n\n  /* Advanced performance optimizations */\n  .scroll-optimized {\n    contain: layout style paint;\n    will-change: transform;\n    transform: translateZ(0);\n  }\n\n  .gpu-accelerated {\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    will-change: transform;\n  }\n\n  /* Parallax effects */\n  .parallax-bg {\n    will-change: transform;\n    transform: translateZ(0);\n  }\n\n  .parallax-text {\n    will-change: transform;\n    transform: translateZ(0);\n  }\n\n  /* Smooth transitions */\n  .section-transition {\n    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  }\n\n  /* Enhanced animations for better performance */\n  /* Removed enhanced-gradient for better performance and readability */\n\n  /* Removed glow animation for better performance */\n\n  .animate-slide-up {\n    animation: slideUp 0.8s ease-out;\n  }\n\n  .animate-fade-in {\n    animation: fadeIn 1s ease-out;\n  }\n\n  .animate-scale-in {\n    animation: scaleIn 0.5s ease-out;\n  }\n\n  .animate-particle {\n    animation: particle 20s linear infinite;\n  }\n\n  .animate-pulse-glow {\n    animation: pulse-glow 2s ease-in-out infinite;\n  }\n\n  .parallax-container {\n    height: 100vh;\n    overflow-x: hidden;\n    overflow-y: auto;\n    perspective: 1px;\n  }\n\n  .parallax-layer {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .parallax-slow {\n    transform: translateZ(-1px) scale(2);\n  }\n\n  .parallax-medium {\n    transform: translateZ(-0.5px) scale(1.5);\n  }\n\n  .parallax-fast {\n    transform: translateZ(0);\n  }\n\n  .scroll-smooth {\n    scroll-behavior: smooth;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .glass-morphism {\n    background: rgba(255, 255, 255, 0.15);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    color: rgba(255, 255, 255, 0.95);\n  }\n\n  .dark .glass-morphism {\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    color: rgba(255, 255, 255, 0.95);\n  }\n\n  /* Removed premium-gradient classes for better readability and performance */\n\n  .text-visible {\n    color: hsl(var(--foreground));\n    opacity: 1;\n  }\n\n  .text-contrast {\n    color: hsl(var(--foreground)) !important;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5) !important;\n    opacity: 1 !important;\n  }\n\n  .dark .text-contrast {\n    color: hsl(var(--foreground)) !important;\n    text-shadow: 0 2px 4px rgba(255, 255, 255, 0.2) !important;\n    opacity: 1 !important;\n  }\n\n  .mesh-gradient {\n    background: radial-gradient(ellipse at top left, hsl(var(--primary)) 0%, transparent 50%),\n                radial-gradient(ellipse at top right, hsl(var(--secondary)) 0%, transparent 50%),\n                radial-gradient(ellipse at bottom left, hsl(var(--accent)) 0%, transparent 50%),\n                radial-gradient(ellipse at bottom right, hsl(var(--success)) 0%, transparent 50%);\n  }\n\n  .progress-bar {\n    transform-origin: left;\n    animation: progressFill 2s ease-out forwards;\n  }\n\n  .tilt-card {\n    transform-style: preserve-3d;\n    transition: transform 0.3s ease;\n  }\n\n  .tilt-card:hover {\n    transform: perspective(1000px) rotateX(5deg) rotateY(5deg) translateZ(10px);\n  }\n\n  .scroll-indicator {\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 4px;\n    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--accent)));\n    z-index: 1000;\n    transition: width 0.3s ease;\n  }\n\n  .particles {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    top: 0;\n    left: 0;\n    z-index: 0;\n  }\n\n  .particle {\n    position: absolute;\n    width: 4px;\n    height: 4px;\n    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)));\n    border-radius: 50%;\n    animation: particle linear infinite;\n    opacity: 0.7;\n  }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-20px); }\n}\n\n@keyframes glow {\n  from { text-shadow: 0 0 20px hsl(var(--primary)); }\n  to { text-shadow: 0 0 30px hsl(var(--secondary)), 0 0 40px hsl(var(--secondary)); }\n}\n\n@keyframes slideUp {\n  from { transform: translateY(100px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes scaleIn {\n  from { transform: scale(0.8); opacity: 0; }\n  to { transform: scale(1); opacity: 1; }\n}\n\n@keyframes particle {\n  0% { transform: translateY(100vh) translateX(-50px); }\n  100% { transform: translateY(-100px) translateX(50px); }\n}\n\n@keyframes progressFill {\n  from { transform: scaleX(0); }\n  to { transform: scaleX(1); }\n}\n\n@keyframes gradient {\n  0%, 100% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n}\n\n@keyframes gradient-shift {\n  0%, 100% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n}\n\n@keyframes float-slow {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-30px) rotate(5deg); }\n}\n\n@keyframes pulse-glow {\n  0%, 100% { \n    box-shadow: 0 0 20px hsl(var(--primary)/0.3);\n    text-shadow: 0 0 20px hsl(var(--primary)/0.5);\n  }\n  50% { \n    box-shadow: 0 0 40px hsl(var(--primary)/0.6), 0 0 60px hsl(var(--secondary)/0.3);\n    text-shadow: 0 0 30px hsl(var(--secondary)/0.7), 0 0 40px hsl(var(--primary)/0.5);\n  }\n}\n\n\n\n/* Custom Scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(var(--dark-card));\n}\n\n::-webkit-scrollbar-thumb {\n  background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)));\n  border-radius: 4px;\n}\n\n/* Loading Screen */\n.loader {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(135deg, hsl(var(--dark-bg)) 0%, hsl(var(--dark-card)) 100%);\n  z-index: 9999;\n  transition: opacity 0.5s ease-out;\n}\n\n.loader-text {\n  font-size: 2rem;\n  font-weight: 600;\n  background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--accent)));\n  background-size: 300% 300%;\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradient 2s ease-in-out infinite;\n}\n/* Performance optimization styles added */\n\n/* Enhanced text contrast utilities for dark mode */\n.text-primary-contrast {\n  @apply text-white;\n}\n\n.dark .text-primary-contrast {\n  @apply text-gray-900;\n}\n\n.text-secondary-contrast {\n  @apply text-white/80;\n}\n\n.dark .text-secondary-contrast {\n  @apply text-gray-700;\n}\n\n.text-nav-contrast {\n  @apply text-white/90;\n}\n\n.dark .text-nav-contrast {\n  @apply text-gray-800;\n}\n","size_bytes":14710},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":158},"client/src/components/About.tsx":{"content":"import { useIntersectionObserver } from \"@/hooks/use-intersection-observer\";\nimport { useScrollEffects, useStaggeredScrollEffects } from \"@/hooks/use-scroll-effects\";\nimport { useRef } from \"react\";\nimport { motion, useScroll, useTransform, useSpring } from \"framer-motion\";\n\nconst skills = [\n  { name: \"React/Next.js\", percentage: 95, delay: 0 },\n  { name: \"Node.js/Express\", percentage: 90, delay: 0.2 },\n  { name: \"PHP\", percentage: 85, delay: 0.4 },\n  { name: \"Three.js/WebGL\", percentage: 85, delay: 0.6 },\n  { name: \"TypeScript\", percentage: 90, delay: 0.8 },\n];\n\nexport default function About() {\n  const ref = useRef<HTMLDivElement>(null);\n  const isVisible = useIntersectionObserver(ref, { threshold: 0.1 });\n  const titleRef = useScrollEffects({ effectClass: 'scroll-effect-fade' });\n  const skillsRef = useStaggeredScrollEffects('.skill-item', { \n    effectClass: 'scroll-effect-slide',\n    staggerDelay: 150 \n  });\n  \n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  const smoothProgress = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  const backgroundY = useTransform(smoothProgress, [0, 1], [\"0%\", \"20%\"]);\n  const textY = useTransform(smoothProgress, [0, 1], [\"0%\", \"10%\"]);\n\n  return (\n    <section id=\"about\" className=\"py-32 px-4 relative overflow-hidden min-h-screen scroll-optimized\" ref={ref}>\n      {/* Parallax Background */}\n      <motion.div \n        style={{ y: backgroundY }}\n        className=\"absolute inset-0 opacity-5\"\n      >\n        <motion.div \n          className=\"absolute top-0 left-0 w-80 h-80 bg-gradient-to-br from-primary to-secondary rounded-full blur-2xl\"\n          animate={{ \n            scale: [1, 1.1, 1],\n            rotate: [0, 90, 0] \n          }}\n          transition={{ \n            duration: 15,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n        <motion.div \n          className=\"absolute bottom-0 right-0 w-80 h-80 bg-gradient-to-br from-accent to-success rounded-full blur-2xl\"\n          animate={{ \n            scale: [1, 1.2, 1],\n            rotate: [0, -120, 0] \n          }}\n          transition={{ \n            duration: 18,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n      </motion.div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <div \n          ref={titleRef as any}\n          className=\"text-center mb-20 scroll-effect-fade\"\n        >\n          <h2 className=\"font-heading text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"text-gradient-cool\">About Me</span>\n          </h2>\n          <p className=\"text-white/80 dark:text-gray-700 text-xl max-w-3xl mx-auto leading-relaxed text-contrast\">\n            Passionate developer with expertise in modern web technologies and a love for creating innovative solutions.\n          </p>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto\">\n          {/* Skills & Info - Centered Layout */}\n          <motion.div \n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            viewport={{ once: true }}\n            className=\"space-y-10\"\n          >\n            <div>\n              <h3 className=\"font-display text-3xl font-bold mb-6 text-gradient-nature\">My Journey</h3>\n              <p className=\"text-secondary-contrast leading-relaxed text-lg mb-8\">\n                With over 6 years of experience in web development, I specialize in creating \n                scalable applications using React, Next.js, and Node.js. My passion lies in \n                building user-centric solutions that combine beautiful design with robust functionality.\n              </p>\n            </div>\n            \n            {/* Enhanced Skills Progress */}\n            <div>\n              <h3 className=\"font-display text-3xl font-bold mb-8 text-gradient-primary\">Technical Skills</h3>\n              <div className=\"space-y-6\">\n                {skills.map((skill, index) => (\n                  <motion.div \n                    key={skill.name} \n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    transition={{ delay: skill.delay, duration: 0.6 }}\n                    viewport={{ once: true }}\n                    data-testid={`skill-${skill.name.toLowerCase().replace(/[^a-z0-9]/g, '-')}`}\n                  >\n                    <div className=\"flex justify-between mb-3\">\n                      <span className=\"font-semibold text-lg text-white dark:text-gray-900\">{skill.name}</span>\n                      <span className=\"text-primary font-bold text-lg\">{skill.percentage}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-700/30 dark:bg-gray-200/30 rounded-full h-3 overflow-hidden glass-morphism\">\n                      <motion.div \n                        initial={{ width: \"0%\" }}\n                        whileInView={{ width: `${skill.percentage}%` }}\n                        transition={{ delay: skill.delay + 0.3, duration: 1.5, ease: \"easeOut\" }}\n                        viewport={{ once: true }}\n                        className=\"h-3 rounded-full bg-primary\"\n                      />\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5529},"client/src/components/Contact.tsx":{"content":"import { Phone, Mail, MapPin, Linkedin, Github, Twitter, Send } from \"lucide-react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { motion, useScroll, useTransform, useSpring } from \"framer-motion\";\nimport { useRef } from \"react\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  subject: z.string().min(5, \"Subject must be at least 5 characters\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nexport default function Contact() {\n  const { toast } = useToast();\n  const ref = useRef<HTMLDivElement>(null);\n  \n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n  \n  // Removed heavy animations for better performance\n  \n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n  });\n\n  const handleFormSubmit = async (data: ContactFormData) => {\n    // Simulate form submission - in a real frontend-only app, you might use a service like Formspree, Netlify Forms, etc.\n    console.log('Contact form submitted:', data);\n    \n    toast({\n      title: \"Message received! 📧\",\n      description: \"Thank you for your message. I'll get back to you soon!\",\n    });\n    \n    form.reset();\n  };\n\n  const onSubmit = async (data: ContactFormData) => {\n    await handleFormSubmit(data);\n  };\n\n  const contactInfo = [\n    {\n      icon: Phone,\n      label: \"Phone\",\n      value: \"+918272049522\",\n      color: \"primary\"\n    },\n    {\n      icon: Mail,\n      label: \"Email\",\n      value: \"aliyaanmohd42@gmail.com\",\n      color: \"secondary\"\n    },\n    {\n      icon: MapPin,\n      label: \"Location\",\n      value: \"India\",\n      color: \"accent\"\n    }\n  ];\n\n  const socialLinks = [\n    { icon: Linkedin, href: \"https://www.linkedin.com/in/hamd-codes-113658311/\", color: \"from-primary to-secondary\" },\n    { icon: Github, href: \"https://github.com/hamd845\", color: \"from-secondary to-accent\" },\n    { icon: Twitter, href: \"https://x.com/CodesHamd23703\", color: \"from-accent to-success\" }\n  ];\n\n  return (\n    <section ref={ref} id=\"contact\" className=\"py-32 px-4 relative overflow-hidden min-h-screen scroll-optimized\">\n      {/* Simple Background */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-0 right-0 w-80 h-80 bg-gradient-to-br from-primary to-secondary rounded-full blur-2xl\" />\n        <div className=\"absolute bottom-0 left-0 w-80 h-80 bg-gradient-to-br from-accent to-success rounded-full blur-2xl\" />\n      </div>\n\n      <div className=\"max-w-6xl mx-auto relative z-10\">\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-20\"\n        >\n          <h2 className=\"font-display text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"text-gradient-hero\">\n              Get In Touch\n            </span>\n          </h2>\n          <p className=\"text-secondary-contrast text-xl max-w-3xl mx-auto leading-relaxed\">\n            Ready to bring your ideas to life? Let's discuss your next project and create something amazing together.\n          </p>\n        </motion.div>\n        \n        <div className=\"grid md:grid-cols-2 gap-16\">\n          {/* Contact Info */}\n          <motion.div \n            initial={{ opacity: 0, x: -50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"space-y-12\"\n          >\n            <div>\n              <h3 className=\"font-display text-3xl font-bold mb-8 text-primary-contrast\">Contact Information</h3>\n              <div className=\"space-y-6\">\n                {contactInfo.map((info, index) => (\n                  <motion.div \n                    key={info.label}\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    transition={{ delay: index * 0.1, duration: 0.6 }}\n                    viewport={{ once: true }}\n                    className=\"flex items-center space-x-6\"\n                    data-testid={`contact-${info.label.toLowerCase()}`}\n                  >\n                    <div className={`w-16 h-16 bg-white/5 rounded-2xl flex items-center justify-center`}>\n                      <info.icon className={`w-6 h-6 text-${info.color}`} />\n                    </div>\n                    <div>\n                      <p className=\"font-semibold text-lg text-primary-contrast\">{info.label}</p>\n                      <p className=\"text-secondary-contrast text-lg\">{info.value}</p>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Social Links */}\n            <div>\n              <h3 className=\"font-display text-2xl font-bold mb-6 text-primary-contrast\">Follow Me</h3>\n              <div className=\"flex space-x-4\">\n                {socialLinks.map((social, index) => (\n                  <motion.a \n                    key={index}\n                    href={social.href}\n                    initial={{ opacity: 0, scale: 0 }}\n                    whileInView={{ opacity: 1, scale: 1 }}\n                    transition={{ delay: index * 0.1, duration: 0.6 }}\n                    viewport={{ once: true }}\n                    className={`w-16 h-16 bg-black rounded-2xl flex items-center justify-center text-white shadow-lg`}\n                    data-testid={`social-${index}`}\n                  >\n                    <social.icon className=\"w-6 h-6\" />\n                  </motion.a>\n                ))}\n              </div>\n            </div>\n          </motion.div>\n          \n          {/* Contact Form */}\n          <motion.div \n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"glass-morphism rounded-3xl p-8 backdrop-blur-xl\"\n          >\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-lg font-semibold text-primary-contrast\">Name</FormLabel>\n                        <FormControl>\n                          <motion.div whileFocus={{ scale: 1.02 }}>\n                            <Input\n                              {...field}\n                              placeholder=\"Your Name\"\n                              className=\"bg-white/10 dark:bg-white/10 border-gray-700/50 dark:border-gray-200/50 focus:border-primary rounded-xl h-12 text-white dark:text-white placeholder:text-white/60 dark:placeholder:text-white/60\"\n                              data-testid=\"input-name\"\n                            />\n                          </motion.div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-lg font-semibold text-primary-contrast\">Email</FormLabel>\n                        <FormControl>\n                          <motion.div whileFocus={{ scale: 1.02 }}>\n                            <Input\n                              {...field}\n                              type=\"email\"\n                              placeholder=\"your@email.com\"\n                              className=\"bg-white/10 dark:bg-white/10 border-gray-700/50 dark:border-gray-200/50 focus:border-primary rounded-xl h-12 text-white dark:text-white placeholder:text-white/60 dark:placeholder:text-white/60\"\n                              data-testid=\"input-email\"\n                            />\n                          </motion.div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n                \n                <FormField\n                  control={form.control}\n                  name=\"subject\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-lg font-semibold text-primary-contrast\">Subject</FormLabel>\n                      <FormControl>\n                        <motion.div whileFocus={{ scale: 1.02 }}>\n                          <Input\n                            {...field}\n                            placeholder=\"Project Discussion\"\n                            className=\"bg-white/10 dark:bg-white/10 border-gray-700/50 dark:border-gray-200/50 focus:border-primary rounded-xl h-12 text-white dark:text-white placeholder:text-white/60 dark:placeholder:text-white/60\"\n                            data-testid=\"input-subject\"\n                          />\n                        </motion.div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"message\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-lg font-semibold text-primary-contrast\">Message</FormLabel>\n                      <FormControl>\n                        <motion.div whileFocus={{ scale: 1.02 }}>\n                          <Textarea\n                            {...field}\n                            rows={6}\n                            placeholder=\"Tell me about your project...\"\n                            className=\"bg-white/10 dark:bg-white/10 border-gray-700/50 dark:border-gray-200/50 focus:border-primary resize-none rounded-xl text-white dark:text-white placeholder:text-white/60 dark:placeholder:text-white/60\"\n                            data-testid=\"textarea-message\"\n                          />\n                        </motion.div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <div className=\"flex justify-center pt-4\">\n                  <Button\n                    type=\"submit\"\n                    disabled={form.formState.isSubmitting}\n                    className=\"w-full max-w-md px-8 py-6 bg-primary hover:bg-primary/90 rounded-xl font-semibold text-white text-lg shadow-lg hover:shadow-xl transition-all duration-300\"\n                    data-testid=\"button-send-message\"\n                  >\n                    <motion.span \n                      className=\"flex items-center justify-center space-x-3\"\n                      animate={form.formState.isSubmitting ? { opacity: [1, 0.5, 1] } : {}}\n                      transition={{ duration: 1, repeat: form.formState.isSubmitting ? Infinity : 0 }}\n                    >\n                      <span>{form.formState.isSubmitting ? \"Sending...\" : \"Send Message\"}</span>\n                      <Send className=\"w-5 h-5\" />\n                    </motion.span>\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":12289},"client/src/components/Experience.tsx":{"content":"import { motion, useScroll, useTransform, useSpring } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { Calendar, MapPin, Briefcase, Award } from \"lucide-react\";\n\nexport default function Experience() {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  // Simplified parallax for better performance\n  const y = useTransform(scrollYProgress, [0, 1], [\"0%\", \"15%\"]);\n\n  const experiences = [\n    {\n      title: \"Senior Full Stack Developer\",\n      company: \"Tech Innovation Corp\",\n      period: \"2022 - Present\",\n      location: \"Remote\",\n      description: \"Leading development of enterprise-scale applications using React, Node.js, and cloud technologies. Implemented microservices architecture serving 100K+ users daily.\",\n      achievements: [\n        \"Reduced application load time by 60% through optimization\",\n        \"Led team of 5 developers on critical product launches\",\n        \"Implemented CI/CD pipeline reducing deployment time by 80%\"\n      ],\n      technologies: [\"React\", \"Node.js\", \"AWS\", \"PostgreSQL\", \"Docker\"]\n    },\n    {\n      title: \"Full Stack Developer\",\n      company: \"Digital Solutions Ltd\",\n      period: \"2020 - 2022\",\n      location: \"India\",\n      description: \"Developed and maintained multiple client projects including e-commerce platforms, management systems, and mobile applications.\",\n      achievements: [\n        \"Built 15+ responsive web applications\",\n        \"Increased client satisfaction rating to 98%\",\n        \"Mentored 3 junior developers\"\n      ],\n      technologies: [\"Vue.js\", \"Python\", \"Django\", \"MySQL\", \"Redis\"]\n    },\n    {\n      title: \"Frontend Developer\",\n      company: \"StartupHub\",\n      period: \"2019 - 2020\",\n      location: \"India\",\n      description: \"Focused on creating intuitive user interfaces and improving user experience for various web applications using modern frontend technologies.\",\n      achievements: [\n        \"Improved user engagement by 45%\",\n        \"Developed reusable component library\",\n        \"Optimized SEO resulting in 200% organic traffic increase\"\n      ],\n      technologies: [\"JavaScript\", \"React\", \"Sass\", \"Webpack\", \"Jest\"]\n    }\n  ];\n\n  return (\n    <section ref={ref} id=\"experience\" className=\"py-32 px-4 relative overflow-hidden\">\n      {/* Parallax Background */}\n      <motion.div \n        style={{ y }}\n        className=\"absolute inset-0 opacity-5\"\n      >\n        <div className=\"absolute top-20 right-20 w-72 h-72 bg-gradient-to-br from-primary to-secondary rounded-full blur-3xl\" />\n        <div className=\"absolute bottom-20 left-20 w-96 h-96 bg-gradient-to-br from-accent to-success rounded-full blur-3xl\" />\n      </motion.div>\n\n      <div className=\"max-w-6xl mx-auto relative z-10\">\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-20\"\n        >\n          <h2 className=\"font-display text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent\">\n              Experience\n            </span>\n          </h2>\n          <p className=\"text-white/80 dark:text-gray-700 text-xl max-w-3xl mx-auto leading-relaxed\">\n            Professional journey building innovative solutions and leading development teams.\n          </p>\n        </motion.div>\n\n        <div className=\"relative\">\n          {/* Timeline Line */}\n          <div className=\"absolute left-8 md:left-1/2 md:transform md:-translate-x-px top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary via-secondary to-accent opacity-30\" />\n\n          <div className=\"space-y-16\">\n            {experiences.map((exp, index) => (\n              <motion.div \n                key={index}\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.2, duration: 0.6 }}\n                viewport={{ once: true }}\n                className={`relative flex items-center ${\n                  index % 2 === 0 \n                    ? 'md:flex-row' \n                    : 'md:flex-row-reverse'\n                }`}\n              >\n                {/* Timeline Dot */}\n                <motion.div \n                  whileHover={{ scale: 1.2 }}\n                  className=\"absolute left-8 md:left-1/2 md:transform md:-translate-x-1/2 w-4 h-4 bg-gradient-to-r from-primary to-secondary rounded-full shadow-lg z-10\"\n                />\n\n                {/* Content Card */}\n                <motion.div \n                  whileHover={{ scale: 1.02, y: -5 }}\n                  className={`ml-20 md:ml-0 md:w-5/12 ${\n                    index % 2 === 0 \n                      ? 'md:mr-auto md:pr-16' \n                      : 'md:ml-auto md:pl-16'\n                  }`}\n                >\n                  <div className=\"glass-morphism rounded-3xl p-8 backdrop-blur-xl border border-white/10\">\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div>\n                        <h3 className=\"font-display text-2xl font-bold text-white dark:text-gray-900 mb-2\">\n                          {exp.title}\n                        </h3>\n                        <div className=\"flex items-center space-x-4 text-primary font-semibold mb-2\">\n                          <span className=\"flex items-center space-x-1\">\n                            <Briefcase className=\"w-4 h-4\" />\n                            <span>{exp.company}</span>\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-4 text-white/60 dark:text-gray-600 text-sm mb-4\">\n                          <span className=\"flex items-center space-x-1\">\n                            <Calendar className=\"w-4 h-4\" />\n                            <span>{exp.period}</span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <MapPin className=\"w-4 h-4\" />\n                            <span>{exp.location}</span>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <p className=\"text-white/80 dark:text-gray-700 leading-relaxed mb-6\">\n                      {exp.description}\n                    </p>\n\n                    <div className=\"mb-6\">\n                      <h4 className=\"flex items-center space-x-2 text-lg font-semibold text-white dark:text-gray-900 mb-3\">\n                        <Award className=\"w-5 h-5 text-success\" />\n                        <span>Key Achievements</span>\n                      </h4>\n                      <ul className=\"space-y-2\">\n                        {exp.achievements.map((achievement, i) => (\n                          <motion.li \n                            key={i}\n                            initial={{ opacity: 0, x: -20 }}\n                            whileInView={{ opacity: 1, x: 0 }}\n                            transition={{ delay: (index * 0.2) + (i * 0.1), duration: 0.4 }}\n                            viewport={{ once: true }}\n                            className=\"flex items-start space-x-2 text-white/70 dark:text-gray-600\"\n                          >\n                            <div className=\"w-2 h-2 rounded-full bg-success mt-2 flex-shrink-0\" />\n                            <span>{achievement}</span>\n                          </motion.li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    <div className=\"flex flex-wrap gap-2\">\n                      {exp.technologies.map((tech, i) => (\n                        <motion.span \n                          key={i}\n                          initial={{ opacity: 0, scale: 0.8 }}\n                          whileInView={{ opacity: 1, scale: 1 }}\n                          transition={{ delay: (index * 0.2) + (i * 0.05), duration: 0.3 }}\n                          viewport={{ once: true }}\n                          whileHover={{ scale: 1.05 }}\n                          className=\"px-3 py-1 bg-primary/20 text-primary rounded-full text-sm font-medium backdrop-blur-sm\"\n                        >\n                          {tech}\n                        </motion.span>\n                      ))}\n                    </div>\n                  </div>\n                </motion.div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":8670},"client/src/components/FloatingElements.tsx":{"content":"import { motion } from \"framer-motion\";\n\nexport default function FloatingElements() {\n  // Reduce to 4 elements for better performance\n  const elements = Array.from({ length: 4 }, (_, i) => ({\n    id: i,\n    size: Math.random() * 6 + 3,\n    delay: Math.random() * 3,\n    duration: Math.random() * 8 + 12,\n    x: Math.random() * 100,\n    y: Math.random() * 100,\n  }));\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none z-0 overflow-hidden\">\n      {elements.map((element) => (\n        <motion.div\n          key={element.id}\n          className=\"absolute rounded-full bg-gradient-to-r from-primary/15 to-secondary/15 blur-sm will-change-transform\"\n          style={{\n            width: element.size,\n            height: element.size,\n            left: `${element.x}%`,\n            top: `${element.y}%`,\n          }}\n          animate={{\n            y: [-15, 15, -15],\n            x: [-8, 8, -8],\n            opacity: [0.2, 0.4, 0.2],\n          }}\n          transition={{\n            duration: element.duration,\n            delay: element.delay,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n          }}\n        />\n      ))}\n    </div>\n  );\n}","size_bytes":1170},"client/src/components/Hero.tsx":{"content":"import { ChevronDown } from \"lucide-react\";\nimport { useSmoothScroll } from \"@/hooks/use-smooth-scroll\";\nimport { motion, useScroll, useTransform, useSpring } from \"framer-motion\";\nimport { useRef } from \"react\";\n\nexport default function Hero() {\n  const { scrollToSection } = useSmoothScroll();\n  const ref = useRef<HTMLDivElement>(null);\n  \n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  const smoothProgress = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  const backgroundY = useTransform(smoothProgress, [0, 1], [\"0%\", \"30%\"]);\n  const textY = useTransform(smoothProgress, [0, 1], [\"0%\", \"15%\"]);\n  const ornamentY = useTransform(smoothProgress, [0, 1], [\"0%\", \"-20%\"]);\n\n  return (\n    <section ref={ref} id=\"hero\" className=\"relative min-h-screen flex items-center justify-center overflow-hidden scroll-optimized\">\n      \n      {/* Parallax Background Elements */}\n      <motion.div \n        style={{ y: backgroundY }}\n        className=\"absolute inset-0 mesh-gradient opacity-30\" \n      />\n      <motion.div \n        style={{ y: backgroundY }}\n        className=\"absolute inset-0 opacity-15\"\n      >\n        <motion.div \n          className=\"absolute top-20 left-10 w-64 h-64 bg-gradient-to-r from-primary/20 to-secondary/20 rounded-full blur-2xl\"\n          animate={{ \n            scale: [1, 1.1, 1],\n            rotate: [0, 90, 0] \n          }}\n          transition={{ \n            duration: 8,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n        <motion.div \n          className=\"absolute bottom-20 right-10 w-80 h-80 bg-gradient-to-r from-accent/15 to-success/15 rounded-full blur-2xl\"\n          animate={{ \n            scale: [1, 1.2, 1],\n            rotate: [0, -120, 0] \n          }}\n          transition={{ \n            duration: 12,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n      </motion.div>\n\n      {/* Floating Ornaments */}\n      <motion.div\n        style={{ y: ornamentY }}\n        className=\"absolute inset-0 pointer-events-none\"\n      >\n        <motion.div \n          className=\"absolute top-1/4 right-1/4 w-16 h-16 border border-primary/30 rounded-lg\"\n          animate={{ \n            rotate: [0, 360],\n            opacity: [0.3, 0.7, 0.3]\n          }}\n          transition={{ \n            duration: 10,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n        <motion.div \n          className=\"absolute bottom-1/3 left-1/6 w-12 h-12 bg-gradient-to-br from-secondary/20 to-accent/20 rounded-full\"\n          animate={{ \n            y: [0, -20, 0],\n            opacity: [0.5, 1, 0.5]\n          }}\n          transition={{ \n            duration: 6,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n      </motion.div>\n      \n      {/* Hero Content with Parallax */}\n      <motion.div \n        style={{ y: textY }}\n        className=\"relative z-20 text-center px-4 max-w-6xl mx-auto\"\n      >\n        <h1 className=\"font-heading text-6xl md:text-8xl lg:text-9xl font-black mb-8 leading-tight\">\n          <span className=\"block text-gradient-cool mb-4 font-medium\">\n            Hi, I'm\n          </span>\n          <span className=\"text-gradient-hero font-serif\">\n            Hamd\n          </span>\n        </h1>\n        \n        <p className=\"text-xl md:text-3xl text-white/90 dark:text-gray-800 mb-12 max-w-4xl mx-auto font-light leading-relaxed text-contrast\">\n          Full Stack Developer crafting <span className=\"text-gradient-warm font-semibold bg-white/10 dark:bg-black/10 px-2 py-1 rounded\">premium digital experiences</span> with \n          cutting-edge technology and innovative solutions.\n        </p>\n        \n        <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center w-full max-w-2xl mx-auto\">\n          <button \n            onClick={() => scrollToSection('projects')}\n            className=\"w-full sm:w-auto px-10 py-5 bg-primary hover:bg-primary/90 rounded-2xl font-semibold text-white shadow-lg transition-all duration-200 z-30 relative\"\n            data-testid=\"button-view-work\"\n          >\n            <span className=\"flex items-center justify-center space-x-2\">\n              <span>Explore My Work</span>\n              <ChevronDown className=\"w-4 h-4 rotate-[-90deg]\" />\n            </span>\n          </button>\n          <a\n            href=\"/Hamd_Elahi_Resume.pdf\"\n            download=\"Hamd_Elahi_Resume.pdf\"\n            className=\"w-full sm:w-auto px-10 py-5 bg-white/10 border-2 border-primary/50 text-white hover:bg-primary/20 rounded-2xl font-semibold transition-all duration-200 inline-block z-30 relative text-center\"\n            data-testid=\"button-download-resume\"\n          >\n            Download Resume\n          </a>\n        </div>\n      </motion.div>\n      \n      {/* Simple Scroll Indicator */}\n      <div \n        className=\"absolute bottom-12 left-1/2 transform -translate-x-1/2 cursor-pointer z-30\"\n        onClick={() => scrollToSection('about')}\n      >\n        <div className=\"flex flex-col items-center space-y-4\">\n          <div className=\"w-8 h-14 border-2 border-primary/80 rounded-full flex justify-center bg-white/10\">\n            <div className=\"w-2 h-4 bg-primary rounded-full mt-3\" />\n          </div>\n          <div className=\"text-primary/80 font-medium text-sm\">\n            Scroll to explore\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5519},"client/src/components/LoadingScreen.tsx":{"content":"export default function LoadingScreen() {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader-text font-poppins\">\n        Loading Portfolio...\n      </div>\n    </div>\n  );\n}\n","size_bytes":191},"client/src/components/Navigation.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Moon, Sun, Menu, X } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useSmoothScroll } from \"@/hooks/use-smooth-scroll\";\nimport { useTheme } from \"@/contexts/ThemeProvider\";\n\nexport default function Navigation() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const { scrollToSection } = useSmoothScroll();\n  const { theme, toggleTheme } = useTheme();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleNavClick = (sectionId: string) => {\n    scrollToSection(sectionId);\n    setIsMobileMenuOpen(false);\n  };\n\n  const navItems = [\n    { id: 'hero', label: 'Home' },\n    { id: 'about', label: 'About' },\n    { id: 'skills', label: 'Skills' },\n    { id: 'projects', label: 'Projects' },\n    { id: 'social', label: 'Social' },\n    { id: 'contact', label: 'Contact' }\n  ];\n\n  return (\n    <motion.nav \n      initial={{ y: -100 }}\n      animate={{ y: 0 }}\n      className={`fixed top-0 w-full z-50 transition-all duration-500 ${\n        scrolled \n          ? 'glass-morphism backdrop-blur-xl border-b border-white/10' \n          : 'bg-transparent'\n      }`}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-20\">\n          <motion.div \n            whileHover={{ scale: 1.05 }}\n            className=\"text-2xl font-display font-black\"\n          >\n            <span className=\"text-gradient-hero font-bold text-shadow-lg\">\n              Hamd\n            </span>\n          </motion.div>\n          \n          <div className=\"hidden md:flex space-x-8\">\n            {navItems.map((item, index) => (\n              <motion.button\n                key={item.id}\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n                whileHover={{ y: -2 }}\n                onClick={() => handleNavClick(item.id)}\n                className=\"relative font-medium transition-colors duration-300 hover:text-primary group text-nav-contrast\"\n                data-testid={`nav-${item.label.toLowerCase()}`}\n              >\n                {item.label}\n                <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-primary to-secondary transition-all duration-300 group-hover:w-full\" />\n              </motion.button>\n            ))}\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <motion.button \n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={toggleTheme}\n              className=\"p-3 rounded-xl glass-morphism hover:bg-primary/20 transition-all duration-300\"\n              data-testid=\"theme-toggle\"\n            >\n              <AnimatePresence mode=\"wait\">\n                {theme === 'dark' ? (\n                  <motion.div\n                    key=\"sun\"\n                    initial={{ rotate: -90, opacity: 0 }}\n                    animate={{ rotate: 0, opacity: 1 }}\n                    exit={{ rotate: 90, opacity: 0 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <Sun className=\"w-5 h-5 text-yellow-500\" />\n                  </motion.div>\n                ) : (\n                  <motion.div\n                    key=\"moon\"\n                    initial={{ rotate: 90, opacity: 0 }}\n                    animate={{ rotate: 0, opacity: 1 }}\n                    exit={{ rotate: -90, opacity: 0 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <Moon className=\"w-5 h-5 text-slate-700\" />\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.button>\n            \n            <motion.button \n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              className=\"md:hidden p-3 rounded-xl glass-morphism\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              data-testid=\"mobile-menu-toggle\"\n            >\n              <AnimatePresence mode=\"wait\">\n                {isMobileMenuOpen ? (\n                  <motion.div\n                    key=\"x\"\n                    initial={{ rotate: -90, opacity: 0 }}\n                    animate={{ rotate: 0, opacity: 1 }}\n                    exit={{ rotate: 90, opacity: 0 }}\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </motion.div>\n                ) : (\n                  <motion.div\n                    key=\"menu\"\n                    initial={{ rotate: 90, opacity: 0 }}\n                    animate={{ rotate: 0, opacity: 1 }}\n                    exit={{ rotate: -90, opacity: 0 }}\n                  >\n                    <Menu className=\"w-5 h-5\" />\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.button>\n          </div>\n        </div>\n        \n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {isMobileMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: \"auto\" }}\n              exit={{ opacity: 0, height: 0 }}\n              className=\"md:hidden py-6 space-y-4 glass-morphism rounded-b-2xl mt-2\"\n            >\n              {navItems.map((item, index) => (\n                <motion.button\n                  key={item.id}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                  onClick={() => handleNavClick(item.id)}\n                  className=\"block w-full text-left px-6 py-3 hover:text-primary transition-colors duration-300 font-medium text-nav-contrast\"\n                  data-testid={`mobile-nav-${item.label.toLowerCase()}`}\n                >\n                  {item.label}\n                </motion.button>\n              ))}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </motion.nav>\n  );\n}","size_bytes":6341},"client/src/components/ParallaxBackground.tsx":{"content":"import React from 'react';\nimport { motion, useScroll, useTransform, useSpring } from 'framer-motion';\n\ninterface ParallaxBackgroundProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport default function ParallaxBackground({ children, className = '' }: ParallaxBackgroundProps) {\n  const { scrollYProgress } = useScroll();\n  \n  // Create multiple layers with different speeds\n  const smoothProgress = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  const backgroundY = useTransform(smoothProgress, [0, 1], [\"0%\", \"30%\"]);\n  const backgroundY2 = useTransform(smoothProgress, [0, 1], [\"0%\", \"50%\"]);\n  const backgroundY3 = useTransform(smoothProgress, [0, 1], [\"0%\", \"80%\"]);\n  \n  const opacity1 = useTransform(smoothProgress, [0, 0.5, 1], [0.8, 0.4, 0.1]);\n  const opacity2 = useTransform(smoothProgress, [0, 0.3, 0.8, 1], [0.6, 0.8, 0.3, 0.1]);\n  const scale1 = useTransform(smoothProgress, [0, 1], [1, 1.3]);\n  const scale2 = useTransform(smoothProgress, [0, 1], [1, 1.5]);\n\n  return (\n    <div className={`fixed inset-0 pointer-events-none z-0 ${className}`}>\n      {/* Layer 1 - Slowest moving background */}\n      <motion.div \n        style={{ \n          y: backgroundY,\n          opacity: opacity1,\n          scale: scale1\n        }}\n        className=\"absolute inset-0 bg-gradient-to-br from-primary/10 via-secondary/5 to-accent/10\"\n      />\n      \n      {/* Layer 2 - Medium speed floating elements */}\n      <motion.div \n        style={{ \n          y: backgroundY2,\n          opacity: opacity2,\n          scale: scale2\n        }}\n        className=\"absolute inset-0\"\n      >\n        <motion.div \n          className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-br from-primary/20 to-secondary/20 rounded-full blur-3xl\"\n          animate={{ \n            scale: [1, 1.2, 1],\n            rotate: [0, 180, 360] \n          }}\n          transition={{ \n            duration: 20,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n        <motion.div \n          className=\"absolute bottom-1/4 right-1/4 w-96 h-96 bg-gradient-to-br from-accent/20 to-success/20 rounded-full blur-3xl\"\n          animate={{ \n            scale: [1.2, 1, 1.2],\n            rotate: [360, 180, 0] \n          }}\n          transition={{ \n            duration: 25,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n      </motion.div>\n\n      {/* Layer 3 - Fastest moving geometric shapes */}\n      <motion.div \n        style={{ \n          y: backgroundY3,\n          opacity: 0.3\n        }}\n        className=\"absolute inset-0\"\n      >\n        <motion.div \n          className=\"absolute top-1/3 right-1/3 w-32 h-32 border border-primary/30 rounded-lg\"\n          animate={{ \n            rotate: [0, 360],\n            scale: [1, 1.1, 1]\n          }}\n          transition={{ \n            duration: 15,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n        <motion.div \n          className=\"absolute bottom-1/3 left-1/5 w-24 h-24 bg-gradient-to-br from-secondary/20 to-accent/20 rounded-full\"\n          animate={{ \n            y: [0, -20, 0],\n            x: [0, 10, 0]\n          }}\n          transition={{ \n            duration: 8,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n      </motion.div>\n\n      {children}\n    </div>\n  );\n}","size_bytes":3405},"client/src/components/ParallaxWrapper.tsx":{"content":"import React, { useRef, useEffect } from 'react';\nimport { motion, useScroll, useTransform, useSpring } from 'framer-motion';\n\ninterface ParallaxWrapperProps {\n  children: React.ReactNode;\n  speed?: number;\n  direction?: 'up' | 'down' | 'left' | 'right';\n  className?: string;\n}\n\nexport default function ParallaxWrapper({ \n  children, \n  speed = 0.5, \n  direction = 'up',\n  className = '' \n}: ParallaxWrapperProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  // Create smooth spring animation\n  const smoothProgress = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  // Different parallax transforms based on direction\n  const getTransform = () => {\n    const range = 100 * speed;\n    switch (direction) {\n      case 'up':\n        return useTransform(smoothProgress, [0, 1], [range, -range]);\n      case 'down':\n        return useTransform(smoothProgress, [0, 1], [-range, range]);\n      case 'left':\n        return useTransform(smoothProgress, [0, 1], [range, -range]);\n      case 'right':\n        return useTransform(smoothProgress, [0, 1], [-range, range]);\n      default:\n        return useTransform(smoothProgress, [0, 1], [range, -range]);\n    }\n  };\n\n  const transform = getTransform();\n\n  const getMotionStyle = () => {\n    if (direction === 'left' || direction === 'right') {\n      return { x: transform };\n    }\n    return { y: transform };\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      style={getMotionStyle()}\n      className={className}\n    >\n      {children}\n    </motion.div>\n  );\n}","size_bytes":1662},"client/src/components/ProjectModal.tsx":{"content":"import { X, Github, Check } from \"lucide-react\";\nimport { useEffect } from \"react\";\n\ninterface ProjectModalProps {\n  project: {\n    id: string;\n    title: string;\n    description: string;\n    features: string[];\n    fullTechnologies: string[];\n    github: string;\n  };\n  onClose: () => void;\n}\n\nexport default function ProjectModal({ project, onClose }: ProjectModalProps) {  \n  useEffect(() => {\n    // Disable body scroll when modal is open\n    document.body.style.overflow = 'hidden';\n    \n    // Handle escape key\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    \n    document.addEventListener('keydown', handleEscape);\n    \n    return () => {\n      document.body.style.overflow = 'unset';\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [onClose]);\n\n  return (\n    <div \n      className=\"fixed inset-0 z-[9999] flex items-center justify-center p-4 bg-black/80 backdrop-blur-sm\"\n      onClick={onClose}\n      data-testid=\"project-modal-overlay\"\n    >\n      <div \n        className=\"bg-white/95 dark:bg-gray-900/95 backdrop-blur-xl rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto transform animate-scale-in shadow-2xl border border-white/20\"\n        onClick={(e) => e.stopPropagation()}\n        data-testid=\"project-modal-content\"\n      >\n        <div className=\"p-8\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h3 className=\"font-display text-3xl font-bold text-gray-900 dark:text-white\">\n              {project.title}\n            </h3>\n            <button \n              onClick={onClose}\n              className=\"w-12 h-12 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors duration-200 text-gray-700 dark:text-gray-300\"\n              data-testid=\"button-close-modal\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n          \n          <div className=\"space-y-8\">\n            <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed text-lg\">\n              {project.description}\n            </p>\n            \n            <div>\n              <h4 className=\"font-display text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n                Key Features\n              </h4>\n              <ul className=\"grid md:grid-cols-2 gap-3\">\n                {project.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-center space-x-3\">\n                    <Check className=\"w-5 h-5 text-green-500 flex-shrink-0\" />\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-display text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n                Technologies Used\n              </h4>\n              <div className=\"flex flex-wrap gap-3\">\n                {project.fullTechnologies.map((tech) => (\n                  <span \n                    key={tech}\n                    className=\"px-4 py-2 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium\"\n                  >\n                    {tech}\n                  </span>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-4 pt-6 border-t border-gray-200 dark:border-gray-700\">\n              <a \n                href={project.github}\n                className=\"px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg font-semibold text-white hover:shadow-lg hover:scale-105 transition-all duration-200 flex items-center space-x-2\"\n                data-testid=\"button-view-code\"\n              >\n                <Github className=\"w-5 h-5\" />\n                <span>View Code</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4047},"client/src/components/Projects.tsx":{"content":"import { Github } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\n// Simple image component with cursor movement effect\nconst ProjectImage = ({ src, alt, className }: { src: string; alt: string; className: string }) => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = (e.clientY - rect.top) / rect.height;\n    setMousePosition({ x, y });\n  };\n\n  return (\n    <div \n      className=\"relative overflow-hidden h-64\"\n      onMouseMove={handleMouseMove}\n      onMouseLeave={() => setMousePosition({ x: 0.5, y: 0.5 })}\n    >\n      <motion.img \n        src={src}\n        alt={alt}\n        className={className}\n        animate={{\n          x: (mousePosition.x - 0.5) * 20,\n          y: (mousePosition.y - 0.5) * 20,\n          scale: 1.1\n        }}\n        transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n      />\n      <div \n        className=\"absolute inset-0 bg-gradient-to-br from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\"\n        style={{\n          background: `radial-gradient(600px circle at ${mousePosition.x * 100}% ${mousePosition.y * 100}%, rgba(255,255,255,0.1), transparent 40%)`\n        }}\n      />\n    </div>\n  );\n};\n\nconst projects = [\n  {\n    id: 'quiz-app',\n    title: 'Interactive Quiz Application',\n    description: 'Educational quiz platform with multiple categories, timed questions, score tracking, and leaderboards for competitive learning.',\n    image: 'https://images.unsplash.com/photo-1434030216411-0b793f4b4173?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'TypeScript', 'Firebase'],\n    github: '#'\n  },\n  {\n    id: 'weather-app',\n    title: 'Weather Forecast App',\n    description: 'Real-time weather application with 7-day forecasts, location-based weather, and interactive weather maps.',\n    image: 'https://images.unsplash.com/photo-1561553590-267fc716698a?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Weather API', 'Geolocation'],\n    github: '#'\n  },\n  {\n    id: 'chess-game',\n    title: 'Advanced Chess Game',\n    description: 'Feature-rich chess game with AI opponent, online multiplayer, move validation, game analysis, and chess puzzles.',\n    image: 'https://images.unsplash.com/photo-1606092195730-5d7b9af1efc5?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Chess.js', 'Socket.io'],\n    github: '#'\n  },\n  {\n    id: 'drawing-app',\n    title: 'Digital Drawing Canvas',\n    description: 'Feature-rich drawing application with multiple brush tools, layers, color palettes, and save/export functionality.',\n    image: 'https://images.unsplash.com/photo-1502675135487-e971002a6adb?w=800&h=400&fit=crop&crop=center',\n    technologies: ['Canvas API', 'JavaScript', 'HTML5'],\n    github: '#'\n  },\n  {\n    id: 'movie-app',\n    title: 'Movie Database Explorer',\n    description: 'Comprehensive movie database with search, ratings, reviews, watchlists, and detailed movie information.',\n    image: 'https://images.unsplash.com/photo-1440404653325-ab127d49abc1?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'TMDB API', 'Redux'],\n    github: '#'\n  },\n  {\n    id: 'twitter-clone',\n    title: 'Social Media Platform',\n    description: 'Twitter-inspired social platform with real-time posts, likes, retweets, user profiles, and trending topics.',\n    image: 'https://images.unsplash.com/photo-1611162617474-5b21e879e113?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Node.js', 'Socket.io'],\n    github: '#'\n  },\n  {\n    id: 'ecommerce-website',\n    title: 'Full E-commerce Website',\n    description: 'Complete e-commerce platform with product catalog, shopping cart, user authentication, order management, and secure payment processing.',\n    image: 'https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Node.js', 'MongoDB', 'Stripe', 'Express'],\n    github: '#'\n  },\n  {\n    id: 'pdf-tools-website',\n    title: '40+ Tools PDF Website',\n    description: 'Comprehensive PDF management platform with 40+ tools including merge, split, compress, convert, and edit functionality with integrated payment system.',\n    image: 'https://images.unsplash.com/photo-1586953208448-b95a79798f07?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Node.js', 'PDF.js', 'Stripe', 'PayPal'],\n    github: '#'\n  },\n  {\n    id: 'restaurant-website',\n    title: 'Restaurant Website',\n    description: 'Modern restaurant website with online menu, table reservations, order management, customer reviews, and integrated payment processing for seamless dining experience.',\n    image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Node.js', 'MongoDB', 'Stripe', 'Express'],\n    github: '#'\n  },\n  {\n    id: 'ai-chatbot',\n    title: 'AI Chatbot',\n    description: 'Intelligent conversational AI chatbot with natural language processing, context awareness, multi-language support, and seamless integration capabilities.',\n    image: 'https://images.unsplash.com/photo-1531746790731-6c087fecd65a?w=800&h=400&fit=crop&crop=center',\n    technologies: ['React', 'Node.js', 'OpenAI API', 'WebSocket', 'MongoDB'],\n    github: '#'\n  }\n];\n\nexport default function Projects() {\n  return (\n    <section id=\"projects\" className=\"min-h-screen bg-black dark:bg-white py-20 px-4 relative overflow-hidden\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 opacity-30\">\n        <div className=\"absolute top-1/3 left-1/4 w-96 h-96 bg-gradient-to-br from-primary to-secondary rounded-full blur-3xl\" />\n        <div className=\"absolute bottom-1/4 right-1/4 w-80 h-80 bg-gradient-to-br from-accent to-success rounded-full blur-2xl\" />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-20\"\n        >\n          <h2 className=\"font-heading text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"text-gradient-hero\">Featured Projects</span>\n          </h2>\n          <p className=\"text-secondary-contrast text-xl max-w-3xl mx-auto leading-relaxed\">\n            Showcasing my latest work in web development, featuring modern technologies and innovative solutions.\n          </p>\n        </motion.div>\n        \n        <div className=\"grid md:grid-cols-2 gap-8\">\n          {projects.map((project, index) => (\n            <motion.div \n              key={project.id}\n              initial={{ opacity: 0, y: 50 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1, duration: 0.6 }}\n              viewport={{ once: true }}\n              whileHover={{ y: -3 }}\n              className=\"group\"\n              data-testid={`card-${project.id}`}\n            >\n              <motion.div \n                className=\"glass-morphism rounded-3xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-200\"\n                whileHover={{ \n                  boxShadow: \"0 25px 50px -12px rgba(139, 92, 246, 0.25)\",\n                  scale: 1.02\n                }}\n              >\n                <div className=\"relative\">\n                  <ProjectImage \n                    src={project.image}\n                    alt={project.title}\n                    className=\"w-full h-64 object-cover\"\n                  />\n                  \n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                  \n                  <motion.div \n                    initial={{ opacity: 0, y: 20 }}\n                    whileHover={{ opacity: 1, y: 0 }}\n                    className=\"absolute bottom-4 left-4 right-4\"\n                  >\n                    <div className=\"flex space-x-3\">\n                      <motion.button\n                        className=\"p-3 bg-white/10 rounded-full text-white hover:text-primary hover:bg-white/20 transition-all duration-150 cursor-pointer\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          window.open(project.github, '_blank');\n                        }}\n                        whileHover={{ \n                          scale: 1.1,\n                          rotate: 360\n                        }}\n                        whileTap={{ scale: 0.9 }}\n                        transition={{ \n                          type: \"spring\", \n                          stiffness: 300, \n                          damping: 15 \n                        }}\n                      >\n                        <Github className=\"w-5 h-5\" />\n                      </motion.button>\n                    </div>\n                  </motion.div>\n                </div>\n                \n                <div className=\"p-8\">\n                  <h3 className=\"font-display text-2xl font-bold mb-4 text-gradient-warm\">\n                    {project.title}\n                  </h3>\n                  <p className=\"text-secondary-contrast mb-6 leading-relaxed\">\n                    {project.description}\n                  </p>\n                  <div className=\"flex flex-wrap gap-2 mb-6\">\n                    {project.technologies.map((tech, techIndex) => (\n                      <motion.span \n                        key={tech}\n                        className=\"px-4 py-2 bg-primary/10 text-primary rounded-full text-sm font-medium hover:bg-primary/20 transition-colors duration-150 cursor-pointer\"\n                        whileHover={{ \n                          scale: 1.05,\n                          y: -2,\n                          backgroundColor: \"rgba(139, 92, 246, 0.2)\"\n                        }}\n                        whileTap={{ scale: 0.95 }}\n                        initial={{ opacity: 0, y: 10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ \n                          delay: techIndex * 0.1,\n                          type: \"spring\",\n                          stiffness: 300,\n                          damping: 20\n                        }}\n                      >\n                        {tech}\n                      </motion.span>\n                    ))}\n                  </div>\n                </div>\n              </motion.div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":10860},"client/src/components/ScrollHijacker.tsx":{"content":"import { useEffect, useRef, useState, useCallback } from 'react';\nimport { motion, useMotionValue, useSpring, useTransform } from 'framer-motion';\n\ninterface ScrollHijackerProps {\n  children: React.ReactNode;\n}\n\nexport default function ScrollHijacker({ children }: ScrollHijackerProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [isScrolling, setIsScrolling] = useState(false);\n  const [totalSections, setTotalSections] = useState(0);\n  const sectionsRef = useRef<HTMLElement[]>([]);\n  \n  // Motion values for smooth animations\n  const scrollProgress = useMotionValue(0);\n  const smoothProgress = useSpring(scrollProgress, { \n    stiffness: 100, \n    damping: 30, \n    restDelta: 0.001 \n  });\n\n  // Parallax effects\n  const backgroundY = useTransform(smoothProgress, [0, 1], [\"0%\", \"50%\"]);\n  const textY = useTransform(smoothProgress, [0, 1], [\"0%\", \"20%\"]);\n\n  const scrollToSection = useCallback((index: number) => {\n    if (isScrolling || index === currentSection || index < 0 || index >= totalSections) return;\n    \n    setIsScrolling(true);\n    setCurrentSection(index);\n    \n    const container = containerRef.current;\n    const sections = sectionsRef.current;\n    \n    if (container && sections[index]) {\n      // Smooth scroll to section\n      const targetSection = sections[index];\n      const containerHeight = container.clientHeight;\n      const targetOffset = targetSection.offsetTop;\n      \n      // Update scroll progress\n      scrollProgress.set(index / Math.max(1, totalSections - 1));\n      \n      // Scroll with custom easing\n      container.scrollTo({\n        top: targetOffset,\n        behavior: 'smooth'\n      });\n      \n      // Reset scrolling state after animation\n      setTimeout(() => {\n        setIsScrolling(false);\n      }, 1000);\n    }\n  }, [isScrolling, currentSection, totalSections, scrollProgress]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    // Get all sections and set up references\n    const sections = Array.from(container.querySelectorAll('section')) as HTMLElement[];\n    sectionsRef.current = sections;\n    setTotalSections(sections.length);\n\n    let wheelTimeout: NodeJS.Timeout;\n    let isWheelActive = false;\n\n    // Enhanced wheel handling with debouncing\n    const handleWheel = (e: WheelEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      if (isScrolling || isWheelActive) return;\n      \n      clearTimeout(wheelTimeout);\n      isWheelActive = true;\n      \n      const direction = e.deltaY > 0 ? 1 : -1;\n      const nextSection = Math.max(0, Math.min(sections.length - 1, currentSection + direction));\n      \n      if (nextSection !== currentSection) {\n        scrollToSection(nextSection);\n      }\n      \n      wheelTimeout = setTimeout(() => {\n        isWheelActive = false;\n      }, 100);\n    };\n\n    // Improved keyboard navigation\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isScrolling) return;\n      \n      let targetSection = currentSection;\n      \n      switch (e.key) {\n        case 'ArrowDown':\n        case 'PageDown':\n        case ' ': // Spacebar\n          e.preventDefault();\n          targetSection = Math.min(sections.length - 1, currentSection + 1);\n          break;\n        case 'ArrowUp':\n        case 'PageUp':\n          e.preventDefault();\n          targetSection = Math.max(0, currentSection - 1);\n          break;\n        case 'Home':\n          e.preventDefault();\n          targetSection = 0;\n          break;\n        case 'End':\n          e.preventDefault();\n          targetSection = sections.length - 1;\n          break;\n        default:\n          return;\n      }\n      \n      scrollToSection(targetSection);\n    };\n\n    // Enhanced touch handling\n    let touchStartY = 0;\n    let touchStartTime = 0;\n    \n    const handleTouchStart = (e: TouchEvent) => {\n      touchStartY = e.touches[0].clientY;\n      touchStartTime = Date.now();\n    };\n    \n    const handleTouchEnd = (e: TouchEvent) => {\n      if (isScrolling) return;\n      \n      const touchEndY = e.changedTouches[0].clientY;\n      const touchEndTime = Date.now();\n      const timeDiff = touchEndTime - touchStartTime;\n      const distance = touchStartY - touchEndY;\n      \n      // Only trigger if it's a quick swipe (less than 300ms) and significant distance\n      if (timeDiff < 300 && Math.abs(distance) > 50) {\n        const direction = distance > 0 ? 1 : -1;\n        const nextSection = Math.max(0, Math.min(sections.length - 1, currentSection + direction));\n        scrollToSection(nextSection);\n      }\n    };\n\n    // Scroll detection for manual scrolling\n    const handleScroll = () => {\n      if (isScrolling) return;\n      \n      const scrollTop = container.scrollTop;\n      const containerHeight = container.clientHeight;\n      \n      // Find the section that's most visible\n      let mostVisibleSection = 0;\n      let maxVisibility = 0;\n      \n      sections.forEach((section, index) => {\n        const rect = section.getBoundingClientRect();\n        const containerRect = container.getBoundingClientRect();\n        \n        const visibleHeight = Math.min(rect.bottom, containerRect.bottom) - Math.max(rect.top, containerRect.top);\n        const visibility = Math.max(0, visibleHeight) / containerHeight;\n        \n        if (visibility > maxVisibility) {\n          maxVisibility = visibility;\n          mostVisibleSection = index;\n        }\n      });\n      \n      if (mostVisibleSection !== currentSection) {\n        setCurrentSection(mostVisibleSection);\n        scrollProgress.set(mostVisibleSection / Math.max(1, sections.length - 1));\n      }\n    };\n\n    // Add event listeners\n    container.addEventListener('wheel', handleWheel, { passive: false });\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    document.addEventListener('keydown', handleKeyDown);\n    container.addEventListener('touchstart', handleTouchStart, { passive: true });\n    container.addEventListener('touchend', handleTouchEnd, { passive: true });\n\n    // Initial setup\n    scrollProgress.set(0);\n\n    // Cleanup\n    return () => {\n      container.removeEventListener('wheel', handleWheel);\n      container.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('keydown', handleKeyDown);\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchend', handleTouchEnd);\n      clearTimeout(wheelTimeout);\n    };\n  }, [currentSection, isScrolling, scrollToSection, scrollProgress, totalSections]);\n\n  // Click handler for navigation dots\n  const handleDotClick = (index: number) => {\n    scrollToSection(index);\n  };\n\n  return (\n    <div className=\"relative\">\n      {/* Enhanced Background Effects */}\n      <motion.div \n        style={{ y: backgroundY }}\n        className=\"fixed inset-0 pointer-events-none z-0\"\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-secondary/5 to-accent/5\" />\n        <motion.div \n          className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-br from-primary/20 to-secondary/20 rounded-full blur-3xl\"\n          animate={{ \n            scale: [1, 1.2, 1],\n            rotate: [0, 180, 360] \n          }}\n          transition={{ \n            duration: 20,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n        <motion.div \n          className=\"absolute bottom-1/4 right-1/4 w-96 h-96 bg-gradient-to-br from-accent/20 to-success/20 rounded-full blur-3xl\"\n          animate={{ \n            scale: [1.2, 1, 1.2],\n            rotate: [360, 180, 0] \n          }}\n          transition={{ \n            duration: 25,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        />\n      </motion.div>\n\n      {/* Main Content Container */}\n      <div \n        ref={containerRef}\n        className=\"relative z-10 min-h-screen overflow-y-auto scroll-smooth\"\n        style={{ \n          scrollBehavior: 'smooth',\n          scrollSnapType: 'y mandatory'\n        }}\n      >\n        <motion.div style={{ y: textY }}>\n          {children}\n        </motion.div>\n      </div>\n      \n      {/* Enhanced Navigation Dots */}\n      <div className=\"fixed right-6 top-1/2 transform -translate-y-1/2 z-50 space-y-3\">\n        {Array.from({ length: totalSections }).map((_, index) => (\n          <motion.button\n            key={index}\n            onClick={() => handleDotClick(index)}\n            className={`group relative w-4 h-4 rounded-full border-2 transition-all duration-300 ${\n              currentSection === index\n                ? 'bg-primary border-primary shadow-lg shadow-primary/50'\n                : 'bg-transparent border-white/30 hover:border-primary hover:bg-primary/20'\n            }`}\n            whileHover={{ scale: 1.2 }}\n            whileTap={{ scale: 0.9 }}\n            aria-label={`Go to section ${index + 1}`}\n          >\n            {/* Tooltip */}\n            <span className=\"absolute right-6 top-1/2 transform -translate-y-1/2 bg-black/80 text-white px-2 py-1 rounded text-xs opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n              {index === 0 && 'Home'}\n              {index === 1 && 'About'}\n              {index === 2 && 'Skills'}\n              {index === 3 && 'Projects'}\n              {index === 4 && 'Contact'}\n              {index === 5 && 'Footer'}\n            </span>\n          </motion.button>\n        ))}\n      </div>\n      \n      {/* Enhanced Progress Bar */}\n      <div className=\"fixed top-0 left-0 w-full h-1 bg-gray-900/50 z-50\">\n        <motion.div\n          className=\"h-full bg-gradient-to-r from-primary via-secondary to-accent relative overflow-hidden\"\n          style={{ \n            width: useTransform(smoothProgress, [0, 1], [\"0%\", \"100%\"])\n          }}\n        >\n          {/* Animated shimmer effect */}\n          <motion.div\n            className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent\"\n            animate={{ x: [\"-100%\", \"100%\"] }}\n            transition={{ \n              duration: 2,\n              repeat: Infinity,\n              ease: \"linear\"\n            }}\n          />\n        </motion.div>\n      </div>\n\n      {/* Section Transition Effects */}\n      <motion.div\n        className=\"fixed inset-0 pointer-events-none z-20\"\n        animate={{ \n          opacity: isScrolling ? 0.1 : 0 \n        }}\n        transition={{ duration: 0.3 }}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-r from-primary/20 to-secondary/20\" />\n      </motion.div>\n\n      {/* Scroll Indicator */}\n      <motion.div \n        className=\"fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50\"\n        animate={{ \n          opacity: currentSection === 0 ? 1 : 0,\n          y: currentSection === 0 ? 0 : 20\n        }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"flex flex-col items-center space-y-2 text-white/60\">\n          <span className=\"text-sm font-medium\">Scroll to explore</span>\n          <motion.div\n            animate={{ y: [0, 5, 0] }}\n            transition={{ \n              duration: 1.5,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }}\n            className=\"w-6 h-10 border-2 border-white/40 rounded-full flex justify-center\"\n          >\n            <motion.div\n              animate={{ y: [2, 6, 2] }}\n              transition={{ \n                duration: 1.5,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              }}\n              className=\"w-1 h-3 bg-white/60 rounded-full mt-2\"\n            />\n          </motion.div>\n        </div>\n      </motion.div>\n    </div>\n  );\n}","size_bytes":11713},"client/src/components/ScrollProgress.tsx":{"content":"import { motion, useScroll, useSpring } from \"framer-motion\";\n\nexport default function ScrollProgress() {\n  const { scrollYProgress } = useScroll();\n  const scaleX = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  return (\n    <motion.div\n      className=\"fixed top-0 left-0 right-0 h-1 bg-gradient-to-r from-primary via-secondary to-accent z-50 origin-left\"\n      style={{ scaleX }}\n    />\n  );\n}","size_bytes":445},"client/src/components/Skills.tsx":{"content":"import { motion, useScroll, useTransform, useSpring } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useScrollEffects, useStaggeredScrollEffects } from \"@/hooks/use-scroll-effects\";\nimport { Code2, Database, Globe, Server, Zap } from \"lucide-react\";\n\nexport default function Skills() {\n  const ref = useRef<HTMLDivElement>(null);\n  const titleRef = useScrollEffects({ effectClass: 'scroll-effect-scale' });\n  const cardsRef = useStaggeredScrollEffects('.skill-card', { \n    effectClass: 'scroll-effect-fade',\n    staggerDelay: 100 \n  });\n  \n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  // Simplified parallax for better performance\n  const y = useTransform(scrollYProgress, [0, 1], [\"0%\", \"20%\"]);\n\n  const skillCategories = [\n    {\n      icon: Code2,\n      title: \"Frontend Development\",\n      skills: [\"React\", \"TypeScript\", \"Next.js\", \"Vue.js\", \"Tailwind CSS\", \"Framer Motion\"],\n      color: \"from-blue-500 to-purple-600\"\n    },\n    {\n      icon: Server,\n      title: \"Backend Development\", \n      skills: [\"Node.js\", \"Python\", \"PHP\", \"Express\", \"FastAPI\", \"MySQL\", \"PostgreSQL\", \"MongoDB\"],\n      color: \"from-green-500 to-teal-600\"\n    },\n    {\n      icon: Database,\n      title: \"Database & Cloud\",\n      skills: [\"AWS\", \"Docker\", \"Redis\", \"GraphQL\", \"Supabase\", \"Vercel\"],\n      color: \"from-orange-500 to-red-600\"\n    },\n    {\n      icon: Globe,\n      title: \"Web Technologies\",\n      skills: [\"REST APIs\", \"WebSockets\", \"OAuth\", \"JWT\", \"Stripe\", \"Payment Systems\"],\n      color: \"from-cyan-500 to-blue-600\"\n    },\n    {\n      icon: Zap,\n      title: \"Tools & DevOps\",\n      skills: [\"Git\", \"GitHub Actions\", \"CI/CD\", \"Testing\", \"Performance\", \"SEO\"],\n      color: \"from-yellow-500 to-orange-600\"\n    }\n  ];\n\n  return (\n    <section ref={ref} id=\"skills\" className=\"py-32 px-4 relative overflow-hidden min-h-screen scroll-optimized\">\n      {/* Simplified Background */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-primary/10 via-secondary/5 to-accent/10\" />\n        <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-primary to-secondary rounded-full blur-2xl opacity-20\" />\n        <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-accent to-success rounded-full blur-2xl opacity-20\" />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <div \n          ref={titleRef as any}\n          className=\"text-center mb-20 scroll-effect-scale\"\n        >\n          <h2 className=\"font-heading text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"text-gradient-hero\">\n              Skills & Expertise\n            </span>\n          </h2>\n          <p className=\"text-secondary-contrast text-xl max-w-3xl mx-auto leading-relaxed\">\n            Comprehensive technical skills across the full development stack, from design to deployment.\n          </p>\n        </div>\n\n        <div ref={cardsRef as any} className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {skillCategories.map((category, index) => (\n            <motion.div \n              key={category.title}\n              whileHover={{ y: -2 }}\n              className=\"skill-card glass-morphism rounded-3xl p-8 backdrop-blur-xl border border-white/10 group scroll-effect-fade\"\n            >\n              <div className={`w-16 h-16 bg-gradient-to-br ${category.color} rounded-2xl flex items-center justify-center mb-6 shadow-lg hover:shadow-xl transition-shadow duration-150`}>\n                <category.icon className=\"w-8 h-8 text-white\" />\n              </div>\n              \n              <h3 className=\"font-display text-2xl font-bold mb-4 text-gradient-cool\">\n                {category.title}\n              </h3>\n              \n              <div className=\"space-y-2\">\n                {category.skills.map((skill, skillIndex) => (\n                  <motion.div \n                    key={skill}\n                    initial={{ opacity: 0, x: -20 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ delay: (index * 0.1) + (skillIndex * 0.05), duration: 0.4 }}\n                    viewport={{ once: true }}\n                    className=\"flex items-center space-x-2\"\n                  >\n                    <div className={`w-2 h-2 rounded-full bg-gradient-to-r ${category.color} opacity-80`} />\n                    <span className=\"text-white/80 dark:text-gray-600 font-medium\">{skill}</span>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":4722},"client/src/components/SocialMedia.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Github, Linkedin, Twitter, Instagram } from \"lucide-react\";\n\nconst socialLinks = [\n  {\n    name: \"GitHub\",\n    icon: Github,\n    url: \"https://github.com/hamd845\",\n    color: \"text-gray-800 dark:text-white\",\n    bgColor: \"bg-gray-100 dark:bg-gray-800\"\n  },\n  {\n    name: \"LinkedIn\", \n    icon: Linkedin,\n    url: \"https://www.linkedin.com/in/hamd-codes-113658311/\",\n    color: \"text-blue-600\",\n    bgColor: \"bg-blue-50 dark:bg-blue-900/20\"\n  },\n  {\n    name: \"Twitter\",\n    icon: Twitter,\n    url: \"https://x.com/CodesHamd23703\",\n    color: \"text-blue-400\",\n    bgColor: \"bg-blue-50 dark:bg-blue-900/20\"\n  },\n  {\n    name: \"Instagram\",\n    icon: Instagram,\n    url: \"https://www.instagram.com/hamd_code/\",\n    color: \"text-pink-500\",\n    bgColor: \"bg-pink-50 dark:bg-pink-900/20\"\n  }\n];\n\nexport default function SocialMedia() {\n  return (\n    <section id=\"social\" className=\"py-32 px-4 relative overflow-hidden min-h-screen scroll-optimized\">\n      {/* Background */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute top-1/3 left-1/3 w-80 h-80 bg-gradient-to-br from-purple-500 to-pink-600 rounded-full blur-2xl\" />\n        <div className=\"absolute bottom-1/3 right-1/3 w-80 h-80 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-full blur-2xl\" />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-20\"\n        >\n          <h2 className=\"font-heading text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"text-gradient-hero text-contrast\">Connect With Me</span>\n          </h2>\n          <p className=\"text-white/80 dark:text-gray-700 text-xl max-w-3xl mx-auto leading-relaxed text-contrast\">\n            Follow my journey and connect with me on social media platforms.\n          </p>\n        </motion.div>\n        \n        <div className=\"flex flex-wrap justify-center gap-6 md:gap-8\">\n          {socialLinks.map((social, index) => (\n            <motion.a \n              key={social.name}\n              href={social.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              initial={{ opacity: 0, y: 50 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1, duration: 0.6 }}\n              viewport={{ once: true }}\n              className={`p-6 glass-morphism rounded-3xl ${social.bgColor}`}\n            >\n              <div className=\"flex flex-col items-center space-y-4\">\n                <div className={`w-16 h-16 rounded-2xl bg-black flex items-center justify-center`}>\n                  <social.icon className={`w-8 h-8 text-white/80 dark:text-gray-300 ${social.color}`} />\n                </div>\n                <span className={`font-medium text-white/80 dark:text-gray-300 ${social.color}`}>\n                  {social.name}\n                </span>\n              </div>\n            </motion.a>\n          ))}\n        </div>\n        \n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mt-16\"\n        >\n          <p className=\"text-white/60 dark:text-gray-500 text-lg\">\n            Let's build something amazing together!\n          </p>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":3594},"client/src/components/Stats.tsx":{"content":"import { motion, useScroll, useTransform, useSpring, useInView } from \"framer-motion\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { Users, Code, Award, Coffee } from \"lucide-react\";\n\ninterface CounterProps {\n  end: number;\n  duration?: number;\n  prefix?: string;\n  suffix?: string;\n}\n\nfunction Counter({ end, duration = 2, prefix = \"\", suffix = \"\" }: CounterProps) {\n  const [count, setCount] = useState(0);\n  const ref = useRef<HTMLDivElement>(null);\n  const inView = useInView(ref, { once: true });\n\n  useEffect(() => {\n    if (inView) {\n      let startTime: number;\n      let animationFrame: number;\n\n      const animate = (currentTime: number) => {\n        if (!startTime) startTime = currentTime;\n        const elapsed = currentTime - startTime;\n        const progress = Math.min(elapsed / (duration * 1000), 1);\n        \n        const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n        setCount(Math.floor(easeOutQuart * end));\n\n        if (progress < 1) {\n          animationFrame = requestAnimationFrame(animate);\n        }\n      };\n\n      animationFrame = requestAnimationFrame(animate);\n      return () => cancelAnimationFrame(animationFrame);\n    }\n  }, [inView, end, duration]);\n\n  return (\n    <span ref={ref}>\n      {prefix}{count.toLocaleString()}{suffix}\n    </span>\n  );\n}\n\nexport default function Stats() {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  const springConfig = { stiffness: 100, damping: 30, restDelta: 0.001 };\n  const y = useSpring(useTransform(scrollYProgress, [0, 1], [\"0%\", \"30%\"]), springConfig);\n\n  const stats = [\n    {\n      icon: Code,\n      value: 150,\n      suffix: \"+\",\n      label: \"Projects Completed\",\n      description: \"Successful projects delivered\",\n      color: \"from-blue-500 to-purple-600\"\n    },\n    {\n      icon: Users,\n      value: 50,\n      suffix: \"+\",\n      label: \"Happy Clients\",\n      description: \"Satisfied customers worldwide\",\n      color: \"from-green-500 to-teal-600\"\n    },\n    {\n      icon: Award,\n      value: 6,\n      suffix: \" Years\",\n      label: \"Experience\",\n      description: \"In web development\",\n      color: \"from-orange-500 to-red-600\"\n    },\n    {\n      icon: Coffee,\n      value: 1000,\n      suffix: \"+\",\n      label: \"Cups of Coffee\",\n      description: \"Fueling late-night coding\",\n      color: \"from-purple-500 to-pink-600\"\n    }\n  ];\n\n  return (\n    <section ref={ref} className=\"py-32 px-4 relative overflow-hidden\">\n      {/* Parallax Background */}\n      <motion.div \n        style={{ y }}\n        className=\"absolute inset-0 opacity-10\"\n      >\n        <div className=\"absolute top-20 left-20 w-64 h-64 bg-gradient-to-br from-primary to-secondary rounded-full blur-3xl\" />\n        <div className=\"absolute bottom-20 right-20 w-80 h-80 bg-gradient-to-br from-accent to-success rounded-full blur-3xl\" />\n      </motion.div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-20\"\n        >\n          <h2 className=\"font-display text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent\">\n              By The Numbers\n            </span>\n          </h2>\n          <p className=\"text-white/80 dark:text-gray-700 text-xl max-w-3xl mx-auto leading-relaxed\">\n            Measurable results and milestones achieved through dedicated work and continuous learning.\n          </p>\n        </motion.div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {stats.map((stat, index) => (\n            <motion.div \n              key={stat.label}\n              initial={{ opacity: 0, y: 50 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1, duration: 0.6 }}\n              viewport={{ once: true }}\n              whileHover={{ scale: 1.05, y: -10 }}\n              className=\"glass-morphism rounded-3xl p-8 backdrop-blur-xl border border-white/10 text-center group\"\n            >\n              <motion.div \n                whileHover={{ scale: 1.2, rotate: 10 }}\n                className={`w-20 h-20 bg-gradient-to-br ${stat.color} rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-2xl group-hover:shadow-lg transition-all duration-300`}\n              >\n                <stat.icon className=\"w-10 h-10 text-white\" />\n              </motion.div>\n              \n              <motion.h3 \n                className=\"font-display text-4xl md:text-5xl font-black mb-2 text-white dark:text-gray-900\"\n              >\n                <Counter \n                  end={stat.value} \n                  suffix={stat.suffix}\n                  duration={2 + index * 0.2} \n                />\n              </motion.h3>\n              \n              <h4 className=\"font-semibold text-xl mb-2 text-primary\">\n                {stat.label}\n              </h4>\n              \n              <p className=\"text-white/70 dark:text-gray-600 text-sm leading-relaxed\">\n                {stat.description}\n              </p>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Additional Achievement Badges */}\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"flex flex-wrap justify-center gap-6 mt-16\"\n        >\n          {[\n            \"React Specialist\",\n            \"Node.js Expert\", \n            \"AWS Certified\",\n            \"TypeScript Pro\",\n            \"UI/UX Focused\"\n          ].map((badge, index) => (\n            <motion.div \n              key={badge}\n              initial={{ opacity: 0, scale: 0.8 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 0.7 + index * 0.1, duration: 0.4 }}\n              viewport={{ once: true }}\n              whileHover={{ scale: 1.05, y: -2 }}\n              className=\"px-6 py-3 glass-morphism rounded-full border border-primary/20 backdrop-blur-xl\"\n            >\n              <span className=\"text-primary font-semibold\">{badge}</span>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":6481},"client/src/components/Testimonials.tsx":{"content":"import { motion, useScroll, useTransform, useSpring } from \"framer-motion\";\nimport { useRef, useState } from \"react\";\nimport { ChevronLeft, ChevronRight, Star, Quote } from \"lucide-react\";\n\nexport default function Testimonials() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  \n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  const springConfig = { stiffness: 100, damping: 30, restDelta: 0.001 };\n  const y = useSpring(useTransform(scrollYProgress, [0, 1], [\"0%\", \"40%\"]), springConfig);\n\n  const testimonials = [\n    {\n      name: \"Sarah Johnson\",\n      role: \"Product Manager\",\n      company: \"TechFlow Solutions\",\n      image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face\",\n      content: \"Hamd delivered exceptional work on our e-commerce platform. His attention to detail and technical expertise helped us increase our conversion rate by 40%. Highly recommended!\",\n      rating: 5,\n      project: \"E-commerce Platform\"\n    },\n    {\n      name: \"Michael Chen\",\n      role: \"CTO\",\n      company: \"StartupVenture\",\n      image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\",\n      content: \"Working with Hamd was a game-changer for our startup. He built a scalable architecture that handled our rapid growth from 1K to 100K users seamlessly.\",\n      rating: 5,\n      project: \"SaaS Platform\"\n    },\n    {\n      name: \"Emily Rodriguez\",\n      role: \"Design Director\",\n      company: \"Creative Agency\",\n      image: \"https://images.unsplash.com/photo-1580489944761-15a19d654956?w=150&h=150&fit=crop&crop=face\", \n      content: \"Hamd perfectly translated our designs into a beautiful, interactive website. His understanding of modern web technologies and user experience is outstanding.\",\n      rating: 5,\n      project: \"Portfolio Website\"\n    },\n    {\n      name: \"David Kim\",\n      role: \"Business Owner\",\n      company: \"Local Restaurant Chain\",\n      image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\",\n      content: \"The mobile app Hamd developed for our restaurant chain increased our online orders by 300%. His expertise in React Native and backend development is impressive.\",\n      rating: 5,\n      project: \"Mobile App\"\n    }\n  ];\n\n  const nextTestimonial = () => {\n    setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n  };\n\n  const prevTestimonial = () => {\n    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length);\n  };\n\n  return (\n    <section ref={ref} id=\"testimonials\" className=\"py-32 px-4 relative overflow-hidden\">\n      {/* Parallax Background */}\n      <motion.div \n        style={{ y }}\n        className=\"absolute inset-0 opacity-10\"\n      >\n        <div className=\"absolute top-0 right-0 w-96 h-96 bg-gradient-to-br from-primary to-secondary rounded-full blur-3xl\" />\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 bg-gradient-to-br from-accent to-success rounded-full blur-3xl\" />\n      </motion.div>\n\n      <div className=\"max-w-6xl mx-auto relative z-10\">\n        <motion.div \n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-20\"\n        >\n          <h2 className=\"font-display text-5xl md:text-7xl font-black mb-6\">\n            <span className=\"bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent\">\n              Client Testimonials\n            </span>\n          </h2>\n          <p className=\"text-white/80 dark:text-gray-700 text-xl max-w-3xl mx-auto leading-relaxed\">\n            What clients say about working with me and the results we've achieved together.\n          </p>\n        </motion.div>\n\n        <div className=\"relative\">\n          {/* Main Testimonial Card */}\n          <motion.div \n            key={currentIndex}\n            initial={{ opacity: 0, x: 100 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -100 }}\n            transition={{ duration: 0.5 }}\n            className=\"glass-morphism rounded-3xl p-8 md:p-12 backdrop-blur-xl border border-white/10 max-w-4xl mx-auto\"\n          >\n            <div className=\"flex items-start space-x-6\">\n              <Quote className=\"w-12 h-12 text-primary flex-shrink-0 mt-2\" />\n              <div className=\"flex-1\">\n                <p className=\"text-xl md:text-2xl text-white/90 dark:text-gray-800 leading-relaxed mb-8 font-light\">\n                  \"{testimonials[currentIndex].content}\"\n                </p>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <motion.img \n                      whileHover={{ scale: 1.1 }}\n                      src={testimonials[currentIndex].image}\n                      alt={testimonials[currentIndex].name}\n                      className=\"w-16 h-16 rounded-full object-cover border-2 border-primary/30\"\n                    />\n                    <div>\n                      <h4 className=\"font-semibold text-lg text-white dark:text-gray-900\">\n                        {testimonials[currentIndex].name}\n                      </h4>\n                      <p className=\"text-primary font-medium\">\n                        {testimonials[currentIndex].role}\n                      </p>\n                      <p className=\"text-white/60 dark:text-gray-600 text-sm\">\n                        {testimonials[currentIndex].company}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <div className=\"flex items-center space-x-1 mb-2\">\n                      {[...Array(testimonials[currentIndex].rating)].map((_, i) => (\n                        <Star key={i} className=\"w-5 h-5 fill-yellow-400 text-yellow-400\" />\n                      ))}\n                    </div>\n                    <p className=\"text-sm text-white/60 dark:text-gray-600\">\n                      Project: {testimonials[currentIndex].project}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Navigation */}\n          <div className=\"flex items-center justify-center space-x-6 mt-12\">\n            <motion.button \n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={prevTestimonial}\n              className=\"w-12 h-12 glass-morphism rounded-full flex items-center justify-center hover:bg-primary/20 transition-all duration-300\"\n            >\n              <ChevronLeft className=\"w-6 h-6 text-white dark:text-gray-900\" />\n            </motion.button>\n\n            {/* Dots Indicator */}\n            <div className=\"flex space-x-2\">\n              {testimonials.map((_, index) => (\n                <motion.button \n                  key={index}\n                  whileHover={{ scale: 1.2 }}\n                  onClick={() => setCurrentIndex(index)}\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                    index === currentIndex \n                      ? 'bg-primary' \n                      : 'bg-white/30 dark:bg-gray-600/30'\n                  }`}\n                />\n              ))}\n            </div>\n\n            <motion.button \n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={nextTestimonial}\n              className=\"w-12 h-12 glass-morphism rounded-full flex items-center justify-center hover:bg-primary/20 transition-all duration-300\"\n            >\n              <ChevronRight className=\"w-6 h-6 text-white dark:text-gray-900\" />\n            </motion.button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":8029},"client/src/components/ThemeToggle.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Moon, Sun } from \"lucide-react\";\n\nexport default function ThemeToggle() {\n  const [isDark, setIsDark] = useState(false);\n\n  useEffect(() => {\n    // Check for saved theme or default to dark\n    const savedTheme = localStorage.getItem('theme') || 'dark';\n    setIsDark(savedTheme === 'dark');\n    document.documentElement.classList.toggle('dark', savedTheme !== 'dark');\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = isDark ? 'light' : 'dark';\n    setIsDark(!isDark);\n    localStorage.setItem('theme', newTheme);\n    document.documentElement.classList.toggle('dark', newTheme !== 'dark');\n  };\n\n  return (\n    <button \n      onClick={toggleTheme}\n      className=\"p-2 rounded-lg bg-dark-card dark:bg-gray-100 hover:bg-gray-700 dark:hover:bg-gray-200 transition-colors duration-300\"\n      data-testid=\"theme-toggle\"\n      aria-label=\"Toggle theme\"\n    >\n      {isDark ? <Sun className=\"w-5 h-5\" /> : <Moon className=\"w-5 h-5\" />}\n    </button>\n  );\n}\n","size_bytes":1019},"client/src/contexts/ThemeProvider.tsx":{"content":"import { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Theme = 'dark' | 'light';\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('dark');\n\n  useEffect(() => {\n    // Get initial theme from localStorage or default to dark\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    const initialTheme = savedTheme || 'dark';\n    \n    setTheme(initialTheme);\n    \n    // Apply theme to document\n    const root = document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(initialTheme);\n    \n    // Store theme\n    localStorage.setItem('theme', initialTheme);\n  }, []);\n\n  const updateTheme = (newTheme: Theme) => {\n    setTheme(newTheme);\n    \n    // Update document classes\n    const root = document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(newTheme);\n    \n    // Store in localStorage\n    localStorage.setItem('theme', newTheme);\n  };\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\n    updateTheme(newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme: updateTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}","size_bytes":1675},"client/src/hooks/use-intersection-observer.tsx":{"content":"import { useState, useEffect, RefObject } from 'react';\n\ninterface UseIntersectionObserverOptions {\n  threshold?: number;\n  rootMargin?: string;\n}\n\nexport function useIntersectionObserver(\n  ref: RefObject<Element>,\n  options: UseIntersectionObserverOptions = {}\n) {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIsIntersecting(entry.isIntersecting);\n      },\n      {\n        threshold: options.threshold || 0.1,\n        rootMargin: options.rootMargin || '0px 0px -50px 0px'\n      }\n    );\n\n    observer.observe(ref.current);\n\n    return () => observer.disconnect();\n  }, [ref, options.threshold, options.rootMargin]);\n\n  return isIntersecting;\n}","size_bytes":794},"client/src/hooks/use-lazy-load.ts":{"content":"import { useState, useEffect, useRef } from 'react';\n\ninterface UseLazyLoadOptions {\n  threshold?: number;\n  rootMargin?: string;\n}\n\nexport function useLazyLoad(options: UseLazyLoadOptions = {}) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const elementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    // If Intersection Observer is not supported, load immediately\n    if (!window.IntersectionObserver) {\n      setIsVisible(true);\n      setHasLoaded(true);\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !hasLoaded) {\n          setIsVisible(true);\n          setHasLoaded(true);\n          observer.unobserve(element);\n        }\n      },\n      {\n        threshold: options.threshold || 0.1,\n        rootMargin: options.rootMargin || '50px'\n      }\n    );\n\n    observer.observe(element);\n\n    return () => {\n      observer.unobserve(element);\n    };\n  }, [hasLoaded, options.threshold, options.rootMargin]);\n\n  return { isVisible, hasLoaded, elementRef };\n}\n\n// Hook for lazy loading images with progressive enhancement\nexport function useLazyImage(src: string, options: UseLazyLoadOptions = {}) {\n  const [imageSrc, setImageSrc] = useState<string>('');\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const { isVisible, elementRef } = useLazyLoad(options);\n\n  useEffect(() => {\n    if (isVisible && src && !imageLoaded && !imageError) {\n      const img = new Image();\n      \n      img.onload = () => {\n        setImageSrc(src);\n        setImageLoaded(true);\n      };\n      \n      img.onerror = () => {\n        setImageError(true);\n      };\n      \n      img.src = src;\n    }\n  }, [isVisible, src, imageLoaded, imageError]);\n\n  return {\n    imageSrc,\n    imageLoaded,\n    imageError,\n    elementRef,\n    isVisible\n  };\n}\n\n// Hook for WebGL feature detection and optimization\nexport function useWebGLOptimization() {\n  const [webglSupported, setWebglSupported] = useState(true);\n  const [webglContext, setWebglContext] = useState<WebGLRenderingContext | null>(null);\n  const [performanceLevel, setPerformanceLevel] = useState<'high' | 'medium' | 'low'>('high');\n\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    \n    if (!gl) {\n      setWebglSupported(false);\n      return;\n    }\n\n    const webglContext = gl as WebGLRenderingContext;\n    setWebglContext(webglContext);\n\n    // Basic performance detection\n    const renderer = webglContext.getParameter(webglContext.RENDERER) as string;\n    const vendor = webglContext.getParameter(webglContext.VENDOR) as string;\n    \n    // Simple heuristic for performance level\n    if (renderer && renderer.toLowerCase().includes('intel')) {\n      setPerformanceLevel('medium');\n    } else if (navigator.hardwareConcurrency && navigator.hardwareConcurrency < 4) {\n      setPerformanceLevel('low');\n    }\n\n    // Check for WebGL extensions that might indicate better performance\n    const extensions = webglContext.getSupportedExtensions();\n    if (extensions && extensions.includes('WEBGL_draw_buffers')) {\n      setPerformanceLevel('high');\n    }\n\n  }, []);\n\n  return {\n    webglSupported,\n    webglContext,\n    performanceLevel,\n    optimizationSettings: {\n      antialias: performanceLevel === 'high',\n      shadows: performanceLevel !== 'low',\n      maxPixelRatio: performanceLevel === 'high' ? 2 : 1,\n      particleCount: performanceLevel === 'high' ? 100 : performanceLevel === 'medium' ? 50 : 20\n    }\n  };\n}","size_bytes":3753},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-parallax.ts":{"content":"import { useScroll, useTransform, useSpring, MotionValue } from 'framer-motion';\nimport { RefObject } from 'react';\n\ninterface ParallaxOptions {\n  speed?: number;\n  direction?: 'up' | 'down' | 'left' | 'right';\n  range?: [number, number];\n  smooth?: boolean;\n}\n\nexport function useParallax(\n  ref: RefObject<HTMLElement>,\n  options: ParallaxOptions = {}\n) {\n  const {\n    speed = 0.5,\n    direction = 'up',\n    range = [0, 1],\n    smooth = true\n  } = options;\n\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"]\n  });\n\n  const progress = smooth \n    ? useSpring(scrollYProgress, {\n        stiffness: 100,\n        damping: 30,\n        restDelta: 0.001\n      })\n    : scrollYProgress;\n\n  const getTransformRange = (): [number, number] => {\n    const baseRange = 100 * speed;\n    switch (direction) {\n      case 'up':\n        return [baseRange, -baseRange];\n      case 'down':\n        return [-baseRange, baseRange];\n      case 'left':\n        return [baseRange, -baseRange];\n      case 'right':\n        return [-baseRange, baseRange];\n      default:\n        return [baseRange, -baseRange];\n    }\n  };\n\n  const transformRange = getTransformRange();\n  const transform = useTransform(progress, range, transformRange);\n\n  return {\n    scrollYProgress: progress,\n    transform,\n    y: direction === 'up' || direction === 'down' ? transform : 0,\n    x: direction === 'left' || direction === 'right' ? transform : 0,\n  };\n}\n\nexport function useMultiLayerParallax() {\n  const { scrollYProgress } = useScroll();\n  \n  const smoothProgress = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  return {\n    layer1: useTransform(smoothProgress, [0, 1], [\"0%\", \"20%\"]),\n    layer2: useTransform(smoothProgress, [0, 1], [\"0%\", \"40%\"]),\n    layer3: useTransform(smoothProgress, [0, 1], [\"0%\", \"60%\"]),\n    layer4: useTransform(smoothProgress, [0, 1], [\"0%\", \"80%\"]),\n    opacity1: useTransform(smoothProgress, [0, 0.5, 1], [1, 0.8, 0.3]),\n    opacity2: useTransform(smoothProgress, [0, 0.3, 0.7, 1], [0.8, 1, 0.6, 0.2]),\n    scale: useTransform(smoothProgress, [0, 1], [1, 1.2]),\n    scrollYProgress: smoothProgress\n  };\n}","size_bytes":2196},"client/src/hooks/use-scroll-effects.ts":{"content":"import { useEffect, useRef } from 'react';\n\ninterface ScrollEffectsOptions {\n  threshold?: number;\n  rootMargin?: string;\n  effectClass?: string;\n}\n\nexport function useScrollEffects(options: ScrollEffectsOptions = {}) {\n  const {\n    threshold = 0.1,\n    rootMargin = '0px 0px -100px 0px',\n    effectClass = 'scroll-effect-fade'\n  } = options;\n\n  const elementRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    // Add initial effect class\n    element.classList.add(effectClass);\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n          } else {\n            entry.target.classList.remove('visible');\n          }\n        });\n      },\n      {\n        threshold,\n        rootMargin\n      }\n    );\n\n    observer.observe(element);\n\n    return () => {\n      observer.unobserve(element);\n    };\n  }, [threshold, rootMargin, effectClass]);\n\n  return elementRef;\n}\n\n// Hook for multiple elements with staggered animations\nexport function useStaggeredScrollEffects(\n  selector: string,\n  options: ScrollEffectsOptions & { staggerDelay?: number } = {}\n) {\n  const containerRef = useRef<HTMLElement>(null);\n  const { staggerDelay = 100, ...scrollOptions } = options;\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const elements = container.querySelectorAll(selector);\n    \n    elements.forEach((element, index) => {\n      element.classList.add(scrollOptions.effectClass || 'scroll-effect-fade');\n      \n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              setTimeout(() => {\n                entry.target.classList.add('visible');\n              }, index * staggerDelay);\n            }\n          });\n        },\n        {\n          threshold: scrollOptions.threshold || 0.1,\n          rootMargin: scrollOptions.rootMargin || '0px 0px -50px 0px'\n        }\n      );\n\n      observer.observe(element);\n    });\n\n    return () => {\n      elements.forEach((element) => {\n        const observer = new IntersectionObserver(() => {});\n        observer.unobserve(element);\n      });\n    };\n  }, [selector, staggerDelay, scrollOptions]);\n\n  return containerRef;\n}","size_bytes":2421},"client/src/hooks/use-scroll-progress.tsx":{"content":"import { useState, useEffect } from 'react';\n\nexport function useScrollProgress() {\n  const [scrollProgress, setScrollProgress] = useState(0);\n\n  useEffect(() => {\n    const updateScrollProgress = () => {\n      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = (winScroll / height) * 100;\n      setScrollProgress(scrolled);\n    };\n\n    window.addEventListener('scroll', updateScrollProgress);\n    return () => window.removeEventListener('scroll', updateScrollProgress);\n  }, []);\n\n  return scrollProgress;\n}","size_bytes":661},"client/src/hooks/use-smooth-scroll.tsx":{"content":"import { useCallback } from 'react';\n\nexport function useSmoothScroll() {\n  const scrollToSection = useCallback((sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, []);\n\n  return { scrollToSection };\n}","size_bytes":352},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/three-utils.ts":{"content":"// Utility functions for Three.js integration\n// This file can be expanded with actual Three.js utilities when implementing full 3D features\n\nexport interface Vector3 {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface FloatingElementConfig {\n  position: Vector3;\n  size: number;\n  color: string;\n  animationDelay: number;\n  animationDuration: number;\n}\n\nexport function createFloatingElement(config: FloatingElementConfig): HTMLDivElement {\n  const element = document.createElement('div');\n  element.className = 'animate-float';\n  element.style.position = 'absolute';\n  element.style.left = `${config.position.x}%`;\n  element.style.top = `${config.position.y}%`;\n  element.style.width = `${config.size}px`;\n  element.style.height = `${config.size}px`;\n  element.style.background = config.color;\n  element.style.borderRadius = '50%';\n  element.style.animationDelay = `${config.animationDelay}s`;\n  element.style.animationDuration = `${config.animationDuration}s`;\n  element.style.opacity = '0.3';\n  \n  return element;\n}\n\nexport function generateRandomVector3(\n  xRange: [number, number] = [0, 100],\n  yRange: [number, number] = [0, 100],\n  zRange: [number, number] = [0, 100]\n): Vector3 {\n  return {\n    x: Math.random() * (xRange[1] - xRange[0]) + xRange[0],\n    y: Math.random() * (yRange[1] - yRange[0]) + yRange[0],\n    z: Math.random() * (zRange[1] - zRange[0]) + zRange[0],\n  };\n}\n\nexport function lerp(start: number, end: number, factor: number): number {\n  return start + (end - start) * factor;\n}\n\nexport function easeInOutCubic(t: number): number {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}\n","size_bytes":1646},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import Hero from \"@/components/Hero\";\nimport About from \"@/components/About\";\nimport Skills from \"@/components/Skills\";\nimport Projects from \"@/components/Projects\";\nimport SocialMedia from \"@/components/SocialMedia\";\nimport Contact from \"@/components/Contact\";\nimport Navigation from \"@/components/Navigation\";\nimport ParallaxBackground from \"@/components/ParallaxBackground\";\nimport ParallaxWrapper from \"@/components/ParallaxWrapper\";\nimport { useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport FloatingElements from \"@/components/FloatingElements\";\n\nexport default function Home() {\n\n  useEffect(() => {\n    // Set proper meta tags for SEO\n    document.title = \"Hamd - Portfolio | Full Stack Developer\";\n    const metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (metaDescription) {\n      metaDescription.setAttribute('content', 'Hamd\\'s portfolio showcasing modern web development projects with React, Node.js, and advanced animations');\n    }\n    \n    const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n    if (metaKeywords) {\n      metaKeywords.setAttribute('content', 'Hamd, portfolio, web developer, React, Node.js, Three.js, TypeScript, modern design');\n    }\n  }, []);\n\n  return (\n    <motion.div \n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className=\"min-h-screen bg-dark-bg dark:bg-background text-light-text dark:text-foreground overflow-x-hidden scroll-smooth\"\n    >\n      {/* Parallax Background Layer */}\n      <ParallaxBackground />\n      \n      <Navigation />\n      <FloatingElements />\n      \n      {/* Main Content Sections with Parallax */}\n      <main className=\"relative z-10\">\n        <ParallaxWrapper speed={0.3} direction=\"up\">\n          <Hero />\n        </ParallaxWrapper>\n        \n        <ParallaxWrapper speed={0.5} direction=\"down\">\n          <About />\n        </ParallaxWrapper>\n        \n        <ParallaxWrapper speed={0.4} direction=\"up\">\n          <Skills />\n        </ParallaxWrapper>\n        \n        <ParallaxWrapper speed={0.6} direction=\"down\">\n          <Projects />\n        </ParallaxWrapper>\n        \n        <ParallaxWrapper speed={0.4} direction=\"up\">\n          <SocialMedia />\n        </ParallaxWrapper>\n        \n        <ParallaxWrapper speed={0.3} direction=\"down\">\n          <Contact />\n        </ParallaxWrapper>\n        \n        {/* Footer with Parallax */}\n        <ParallaxWrapper speed={0.2} direction=\"down\">\n          <footer className=\"py-12 px-4 border-t border-gray-700/20 dark:border-gray-200/20\">\n            <div className=\"max-w-7xl mx-auto text-center\">\n              <div className=\"font-display text-2xl font-bold mb-4\">\n                <span className=\"text-gradient-hero\">Hamd</span>\n              </div>\n              <p className=\"text-gray-400 dark:text-gray-600 mb-6\">\n                Building the future, one line of code at a time.\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                © 2024 Portfolio. All rights reserved. Designed & Developed with ❤️\n              </p>\n            </div>\n          </footer>\n        </ParallaxWrapper>\n      </main>\n    </motion.div>\n  );\n}\n","size_bytes":3222},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/three/FloatingElements.tsx":{"content":"export default function FloatingElements() {\n  return (\n    <>\n      {/* Floating 3D Elements (CSS-based simulation) */}\n      <div className=\"absolute -top-20 left-10 w-20 h-20 bg-gradient-to-br from-primary to-secondary rounded-full opacity-20 animate-float\" style={{ animationDelay: '0s' }} />\n      <div className=\"absolute top-40 right-20 w-16 h-16 bg-gradient-to-br from-accent to-success rounded-full opacity-30 animate-float\" style={{ animationDelay: '2s' }} />\n      <div className=\"absolute -bottom-10 left-1/3 w-12 h-12 bg-gradient-to-br from-secondary to-accent rounded-full opacity-25 animate-float\" style={{ animationDelay: '4s' }} />\n      \n      {/* Additional geometric shapes */}\n      <div className=\"absolute top-1/4 left-3/4 w-8 h-8 border-2 border-primary/30 rotate-45 animate-float\" style={{ animationDelay: '1s' }} />\n      <div className=\"absolute bottom-1/4 right-1/4 w-6 h-6 bg-gradient-to-br from-accent to-primary rounded-full opacity-40 animate-float\" style={{ animationDelay: '3s' }} />\n    </>\n  );\n}\n","size_bytes":1033},"client/src/components/three/ParticleBackground.tsx":{"content":"import { useEffect, useRef } from 'react';\n\nexport default function ParticleBackground() {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const container = containerRef.current;\n    const particleCount = 50;\n\n    // Create particles\n    for (let i = 0; i < particleCount; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'particle';\n      particle.style.left = Math.random() * 100 + '%';\n      particle.style.animationDelay = Math.random() * 20 + 's';\n      particle.style.animationDuration = (Math.random() * 10 + 10) + 's';\n      \n      // Random size variations\n      const size = Math.random() * 4 + 2;\n      particle.style.width = size + 'px';\n      particle.style.height = size + 'px';\n      \n      container.appendChild(particle);\n    }\n\n    // Cleanup function\n    return () => {\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n    };\n  }, []);\n\n  return <div ref={containerRef} className=\"particles\" />;\n}\n","size_bytes":1075},"client/src/components/three/Scene3D.tsx":{"content":"import { useState, useRef, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport * as THREE from 'three';\n\n// WebGL optimized Three.js scene with vanilla implementation\nclass WebGLScene {\n  private scene: THREE.Scene;\n  private camera: THREE.PerspectiveCamera;\n  private renderer: THREE.WebGLRenderer;\n  private models: THREE.Mesh[] = [];\n  private animationId: number | null = null;\n\n  constructor(canvas: HTMLCanvasElement) {\n    // Scene setup\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(45, canvas.width / canvas.height, 0.1, 1000);\n    this.camera.position.set(0, 0, 6);\n\n    // Renderer setup with optimizations\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\"\n    });\n    this.renderer.setSize(canvas.width, canvas.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n    this.setupLighting();\n    this.createModels();\n    this.animate();\n  }\n\n  private setupLighting() {\n    // Ambient light\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.4);\n    this.scene.add(ambientLight);\n\n    // Point light\n    const pointLight = new THREE.PointLight(0xffffff, 0.8);\n    pointLight.position.set(10, 10, 10);\n    pointLight.castShadow = true;\n    this.scene.add(pointLight);\n\n    // Spot light\n    const spotLight = new THREE.SpotLight(0xffffff, 0.5);\n    spotLight.position.set(-10, -10, -10);\n    spotLight.angle = Math.PI / 8;\n    spotLight.penumbra = 1;\n    this.scene.add(spotLight);\n  }\n\n  private createModels() {\n    const geometries = [\n      new THREE.BoxGeometry(1.5, 1.5, 1.5),\n      new THREE.SphereGeometry(1, 32, 32),\n      new THREE.ConeGeometry(1, 2, 8)\n    ];\n\n    const colors = [0x2563eb, 0x7c3aed, 0x06b6d4];\n    const positions = [[-2, 0, 0], [0, 0, 0], [2, 0, 0]];\n\n    geometries.forEach((geometry, index) => {\n      const material = new THREE.MeshStandardMaterial({\n        color: colors[index],\n        metalness: 0.7,\n        roughness: 0.2\n      });\n\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(positions[index][0], positions[index][1], positions[index][2]);\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      \n      this.models.push(mesh);\n      this.scene.add(mesh);\n    });\n  }\n\n  private animate = () => {\n    this.animationId = requestAnimationFrame(this.animate);\n\n    // Rotate models\n    this.models.forEach(model => {\n      model.rotation.y += 0.01;\n      model.rotation.x += 0.005;\n    });\n\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  public resize(width: number, height: number) {\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n  }\n\n  public dispose() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n    this.renderer.dispose();\n    this.models.forEach(model => {\n      model.geometry.dispose();\n      if (model.material instanceof THREE.Material) {\n        model.material.dispose();\n      }\n    });\n  }\n}\n\n// Main 3D Scene Component with vanilla Three.js and WebGL optimization\nexport default function Scene3D({ visible = true }: { visible?: boolean }) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const sceneRef = useRef<WebGLScene | null>(null);\n  const [webglSupported, setWebglSupported] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check WebGL support\n    const testCanvas = document.createElement('canvas');\n    const gl = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!gl) {\n      setWebglSupported(false);\n      setIsLoading(false);\n      return;\n    }\n\n    if (!visible || !canvasRef.current) return;\n\n    try {\n      // Initialize Three.js scene\n      const canvas = canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * window.devicePixelRatio;\n      canvas.height = rect.height * window.devicePixelRatio;\n      canvas.style.width = rect.width + 'px';\n      canvas.style.height = rect.height + 'px';\n\n      sceneRef.current = new WebGLScene(canvas);\n      setIsLoading(false);\n\n      // Handle resize\n      const handleResize = () => {\n        if (sceneRef.current && canvas) {\n          const rect = canvas.getBoundingClientRect();\n          canvas.width = rect.width * window.devicePixelRatio;\n          canvas.height = rect.height * window.devicePixelRatio;\n          sceneRef.current.resize(canvas.width, canvas.height);\n        }\n      };\n\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (sceneRef.current) {\n          sceneRef.current.dispose();\n        }\n      };\n    } catch (error) {\n      console.warn('WebGL initialization failed:', error);\n      setWebglSupported(false);\n      setIsLoading(false);\n    }\n  }, [visible]);\n\n  if (!visible || !webglSupported) {\n    return (\n      <div className=\"w-full h-64 bg-gradient-to-br from-primary/10 to-secondary/10 rounded-xl flex items-center justify-center\">\n        <div className=\"text-white/40 dark:text-gray-500 text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-4 bg-primary/20 rounded-lg flex items-center justify-center\">\n            <div className=\"w-8 h-8 bg-primary/40 rounded\"></div>\n          </div>\n          <p className=\"text-sm\">3D Preview</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div \n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.6 }}\n      className=\"w-full h-64 rounded-xl overflow-hidden bg-gradient-to-br from-gray-900/50 to-black/50 relative\"\n    >\n      {isLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"text-white/60 dark:text-gray-500\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        </div>\n      )}\n      <canvas\n        ref={canvasRef}\n        className=\"w-full h-full\"\n        style={{ display: isLoading ? 'none' : 'block' }}\n      />\n    </motion.div>\n  );\n}","size_bytes":6372},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"start_frontend.sh":{"content":"#!/bin/bash\\ncd /home/runner/workspace && npx vite --host 0.0.0.0 --port 5000\n","size_bytes":78},"index.js":{"content":"const { exec } = require(\"child_process\");\n\nconsole.log(\"Starting frontend-only portfolio...\");\n\nconst viteProcess = exec(\"npx vite --host 0.0.0.0 --port 5000\", (error, stdout, stderr) => {\n  if (error) {\n    console.error(`Error: ${error.message}`);\n    return;\n  }\n  if (stderr) {\n    console.error(`Stderr: ${stderr}`);\n    return;\n  }\n  console.log(`Stdout: ${stdout}`);\n});\n\nviteProcess.stdout?.on(\"data\", (data) => {\n  console.log(data.toString());\n});\n\nviteProcess.stderr?.on(\"data\", (data) => {\n  console.error(data.toString());\n});\n\n// Keep the process alive\nprocess.on('SIGINT', () => {\n  viteProcess.kill();\n  process.exit();\n});","size_bytes":640},"server.js":{"content":"import { exec } from \"child_process\";\n\nconsole.log(\"Starting frontend-only portfolio...\");\n\nconst viteProcess = exec(\"npx vite --host 0.0.0.0 --port 5000\", (error, stdout, stderr) => {\n  if (error) {\n    console.error(`Error: ${error.message}`);\n    return;\n  }\n  if (stderr) {\n    console.error(`Stderr: ${stderr}`);\n    return;\n  }\n  console.log(`Stdout: ${stdout}`);\n});\n\nviteProcess.stdout?.on(\"data\", (data) => {\n  console.log(data.toString());\n});\n\nviteProcess.stderr?.on(\"data\", (data) => {\n  console.error(data.toString());\n});\n\n// Keep the process alive\nprocess.on('SIGINT', () => {\n  viteProcess.kill();\n  process.exit();\n});","size_bytes":635},"vite.replit.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    host: \"0.0.0.0\",\n    port: 5000,\n    allowedHosts: true,\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});","size_bytes":969}},"version":1}